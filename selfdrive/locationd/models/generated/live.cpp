#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6784604416272540050) {
   out_6784604416272540050[0] = 0;
   out_6784604416272540050[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6784604416272540050[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6784604416272540050[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6784604416272540050[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6784604416272540050[5] = -sin(in_vec[1]);
   out_6784604416272540050[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6784604416272540050[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6784604416272540050[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6784604416272540050[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6784604416272540050[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6784604416272540050[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6784604416272540050[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6784604416272540050[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6784604416272540050[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6784604416272540050[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6784604416272540050[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6784604416272540050[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2655675818042385017) {
   out_2655675818042385017[0] = delta_x[0] + nom_x[0];
   out_2655675818042385017[1] = delta_x[1] + nom_x[1];
   out_2655675818042385017[2] = delta_x[2] + nom_x[2];
   out_2655675818042385017[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2655675818042385017[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2655675818042385017[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2655675818042385017[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2655675818042385017[7] = delta_x[6] + nom_x[7];
   out_2655675818042385017[8] = delta_x[7] + nom_x[8];
   out_2655675818042385017[9] = delta_x[8] + nom_x[9];
   out_2655675818042385017[10] = delta_x[9] + nom_x[10];
   out_2655675818042385017[11] = delta_x[10] + nom_x[11];
   out_2655675818042385017[12] = delta_x[11] + nom_x[12];
   out_2655675818042385017[13] = delta_x[12] + nom_x[13];
   out_2655675818042385017[14] = delta_x[13] + nom_x[14];
   out_2655675818042385017[15] = delta_x[14] + nom_x[15];
   out_2655675818042385017[16] = delta_x[15] + nom_x[16];
   out_2655675818042385017[17] = delta_x[16] + nom_x[17];
   out_2655675818042385017[18] = delta_x[17] + nom_x[18];
   out_2655675818042385017[19] = delta_x[18] + nom_x[19];
   out_2655675818042385017[20] = delta_x[19] + nom_x[20];
   out_2655675818042385017[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2963903028631488861) {
   out_2963903028631488861[0] = -nom_x[0] + true_x[0];
   out_2963903028631488861[1] = -nom_x[1] + true_x[1];
   out_2963903028631488861[2] = -nom_x[2] + true_x[2];
   out_2963903028631488861[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2963903028631488861[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2963903028631488861[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2963903028631488861[6] = -nom_x[7] + true_x[7];
   out_2963903028631488861[7] = -nom_x[8] + true_x[8];
   out_2963903028631488861[8] = -nom_x[9] + true_x[9];
   out_2963903028631488861[9] = -nom_x[10] + true_x[10];
   out_2963903028631488861[10] = -nom_x[11] + true_x[11];
   out_2963903028631488861[11] = -nom_x[12] + true_x[12];
   out_2963903028631488861[12] = -nom_x[13] + true_x[13];
   out_2963903028631488861[13] = -nom_x[14] + true_x[14];
   out_2963903028631488861[14] = -nom_x[15] + true_x[15];
   out_2963903028631488861[15] = -nom_x[16] + true_x[16];
   out_2963903028631488861[16] = -nom_x[17] + true_x[17];
   out_2963903028631488861[17] = -nom_x[18] + true_x[18];
   out_2963903028631488861[18] = -nom_x[19] + true_x[19];
   out_2963903028631488861[19] = -nom_x[20] + true_x[20];
   out_2963903028631488861[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6140507083378850689) {
   out_6140507083378850689[0] = 1.0;
   out_6140507083378850689[1] = 0;
   out_6140507083378850689[2] = 0;
   out_6140507083378850689[3] = 0;
   out_6140507083378850689[4] = 0;
   out_6140507083378850689[5] = 0;
   out_6140507083378850689[6] = 0;
   out_6140507083378850689[7] = 0;
   out_6140507083378850689[8] = 0;
   out_6140507083378850689[9] = 0;
   out_6140507083378850689[10] = 0;
   out_6140507083378850689[11] = 0;
   out_6140507083378850689[12] = 0;
   out_6140507083378850689[13] = 0;
   out_6140507083378850689[14] = 0;
   out_6140507083378850689[15] = 0;
   out_6140507083378850689[16] = 0;
   out_6140507083378850689[17] = 0;
   out_6140507083378850689[18] = 0;
   out_6140507083378850689[19] = 0;
   out_6140507083378850689[20] = 0;
   out_6140507083378850689[21] = 0;
   out_6140507083378850689[22] = 1.0;
   out_6140507083378850689[23] = 0;
   out_6140507083378850689[24] = 0;
   out_6140507083378850689[25] = 0;
   out_6140507083378850689[26] = 0;
   out_6140507083378850689[27] = 0;
   out_6140507083378850689[28] = 0;
   out_6140507083378850689[29] = 0;
   out_6140507083378850689[30] = 0;
   out_6140507083378850689[31] = 0;
   out_6140507083378850689[32] = 0;
   out_6140507083378850689[33] = 0;
   out_6140507083378850689[34] = 0;
   out_6140507083378850689[35] = 0;
   out_6140507083378850689[36] = 0;
   out_6140507083378850689[37] = 0;
   out_6140507083378850689[38] = 0;
   out_6140507083378850689[39] = 0;
   out_6140507083378850689[40] = 0;
   out_6140507083378850689[41] = 0;
   out_6140507083378850689[42] = 0;
   out_6140507083378850689[43] = 0;
   out_6140507083378850689[44] = 1.0;
   out_6140507083378850689[45] = 0;
   out_6140507083378850689[46] = 0;
   out_6140507083378850689[47] = 0;
   out_6140507083378850689[48] = 0;
   out_6140507083378850689[49] = 0;
   out_6140507083378850689[50] = 0;
   out_6140507083378850689[51] = 0;
   out_6140507083378850689[52] = 0;
   out_6140507083378850689[53] = 0;
   out_6140507083378850689[54] = 0;
   out_6140507083378850689[55] = 0;
   out_6140507083378850689[56] = 0;
   out_6140507083378850689[57] = 0;
   out_6140507083378850689[58] = 0;
   out_6140507083378850689[59] = 0;
   out_6140507083378850689[60] = 0;
   out_6140507083378850689[61] = 0;
   out_6140507083378850689[62] = 0;
   out_6140507083378850689[63] = 0;
   out_6140507083378850689[64] = 0;
   out_6140507083378850689[65] = 0;
   out_6140507083378850689[66] = -0.5*state[4];
   out_6140507083378850689[67] = -0.5*state[5];
   out_6140507083378850689[68] = -0.5*state[6];
   out_6140507083378850689[69] = 0;
   out_6140507083378850689[70] = 0;
   out_6140507083378850689[71] = 0;
   out_6140507083378850689[72] = 0;
   out_6140507083378850689[73] = 0;
   out_6140507083378850689[74] = 0;
   out_6140507083378850689[75] = 0;
   out_6140507083378850689[76] = 0;
   out_6140507083378850689[77] = 0;
   out_6140507083378850689[78] = 0;
   out_6140507083378850689[79] = 0;
   out_6140507083378850689[80] = 0;
   out_6140507083378850689[81] = 0;
   out_6140507083378850689[82] = 0;
   out_6140507083378850689[83] = 0;
   out_6140507083378850689[84] = 0;
   out_6140507083378850689[85] = 0;
   out_6140507083378850689[86] = 0;
   out_6140507083378850689[87] = 0.5*state[3];
   out_6140507083378850689[88] = 0.5*state[6];
   out_6140507083378850689[89] = -0.5*state[5];
   out_6140507083378850689[90] = 0;
   out_6140507083378850689[91] = 0;
   out_6140507083378850689[92] = 0;
   out_6140507083378850689[93] = 0;
   out_6140507083378850689[94] = 0;
   out_6140507083378850689[95] = 0;
   out_6140507083378850689[96] = 0;
   out_6140507083378850689[97] = 0;
   out_6140507083378850689[98] = 0;
   out_6140507083378850689[99] = 0;
   out_6140507083378850689[100] = 0;
   out_6140507083378850689[101] = 0;
   out_6140507083378850689[102] = 0;
   out_6140507083378850689[103] = 0;
   out_6140507083378850689[104] = 0;
   out_6140507083378850689[105] = 0;
   out_6140507083378850689[106] = 0;
   out_6140507083378850689[107] = 0;
   out_6140507083378850689[108] = -0.5*state[6];
   out_6140507083378850689[109] = 0.5*state[3];
   out_6140507083378850689[110] = 0.5*state[4];
   out_6140507083378850689[111] = 0;
   out_6140507083378850689[112] = 0;
   out_6140507083378850689[113] = 0;
   out_6140507083378850689[114] = 0;
   out_6140507083378850689[115] = 0;
   out_6140507083378850689[116] = 0;
   out_6140507083378850689[117] = 0;
   out_6140507083378850689[118] = 0;
   out_6140507083378850689[119] = 0;
   out_6140507083378850689[120] = 0;
   out_6140507083378850689[121] = 0;
   out_6140507083378850689[122] = 0;
   out_6140507083378850689[123] = 0;
   out_6140507083378850689[124] = 0;
   out_6140507083378850689[125] = 0;
   out_6140507083378850689[126] = 0;
   out_6140507083378850689[127] = 0;
   out_6140507083378850689[128] = 0;
   out_6140507083378850689[129] = 0.5*state[5];
   out_6140507083378850689[130] = -0.5*state[4];
   out_6140507083378850689[131] = 0.5*state[3];
   out_6140507083378850689[132] = 0;
   out_6140507083378850689[133] = 0;
   out_6140507083378850689[134] = 0;
   out_6140507083378850689[135] = 0;
   out_6140507083378850689[136] = 0;
   out_6140507083378850689[137] = 0;
   out_6140507083378850689[138] = 0;
   out_6140507083378850689[139] = 0;
   out_6140507083378850689[140] = 0;
   out_6140507083378850689[141] = 0;
   out_6140507083378850689[142] = 0;
   out_6140507083378850689[143] = 0;
   out_6140507083378850689[144] = 0;
   out_6140507083378850689[145] = 0;
   out_6140507083378850689[146] = 0;
   out_6140507083378850689[147] = 0;
   out_6140507083378850689[148] = 0;
   out_6140507083378850689[149] = 0;
   out_6140507083378850689[150] = 0;
   out_6140507083378850689[151] = 0;
   out_6140507083378850689[152] = 0;
   out_6140507083378850689[153] = 1.0;
   out_6140507083378850689[154] = 0;
   out_6140507083378850689[155] = 0;
   out_6140507083378850689[156] = 0;
   out_6140507083378850689[157] = 0;
   out_6140507083378850689[158] = 0;
   out_6140507083378850689[159] = 0;
   out_6140507083378850689[160] = 0;
   out_6140507083378850689[161] = 0;
   out_6140507083378850689[162] = 0;
   out_6140507083378850689[163] = 0;
   out_6140507083378850689[164] = 0;
   out_6140507083378850689[165] = 0;
   out_6140507083378850689[166] = 0;
   out_6140507083378850689[167] = 0;
   out_6140507083378850689[168] = 0;
   out_6140507083378850689[169] = 0;
   out_6140507083378850689[170] = 0;
   out_6140507083378850689[171] = 0;
   out_6140507083378850689[172] = 0;
   out_6140507083378850689[173] = 0;
   out_6140507083378850689[174] = 0;
   out_6140507083378850689[175] = 1.0;
   out_6140507083378850689[176] = 0;
   out_6140507083378850689[177] = 0;
   out_6140507083378850689[178] = 0;
   out_6140507083378850689[179] = 0;
   out_6140507083378850689[180] = 0;
   out_6140507083378850689[181] = 0;
   out_6140507083378850689[182] = 0;
   out_6140507083378850689[183] = 0;
   out_6140507083378850689[184] = 0;
   out_6140507083378850689[185] = 0;
   out_6140507083378850689[186] = 0;
   out_6140507083378850689[187] = 0;
   out_6140507083378850689[188] = 0;
   out_6140507083378850689[189] = 0;
   out_6140507083378850689[190] = 0;
   out_6140507083378850689[191] = 0;
   out_6140507083378850689[192] = 0;
   out_6140507083378850689[193] = 0;
   out_6140507083378850689[194] = 0;
   out_6140507083378850689[195] = 0;
   out_6140507083378850689[196] = 0;
   out_6140507083378850689[197] = 1.0;
   out_6140507083378850689[198] = 0;
   out_6140507083378850689[199] = 0;
   out_6140507083378850689[200] = 0;
   out_6140507083378850689[201] = 0;
   out_6140507083378850689[202] = 0;
   out_6140507083378850689[203] = 0;
   out_6140507083378850689[204] = 0;
   out_6140507083378850689[205] = 0;
   out_6140507083378850689[206] = 0;
   out_6140507083378850689[207] = 0;
   out_6140507083378850689[208] = 0;
   out_6140507083378850689[209] = 0;
   out_6140507083378850689[210] = 0;
   out_6140507083378850689[211] = 0;
   out_6140507083378850689[212] = 0;
   out_6140507083378850689[213] = 0;
   out_6140507083378850689[214] = 0;
   out_6140507083378850689[215] = 0;
   out_6140507083378850689[216] = 0;
   out_6140507083378850689[217] = 0;
   out_6140507083378850689[218] = 0;
   out_6140507083378850689[219] = 1.0;
   out_6140507083378850689[220] = 0;
   out_6140507083378850689[221] = 0;
   out_6140507083378850689[222] = 0;
   out_6140507083378850689[223] = 0;
   out_6140507083378850689[224] = 0;
   out_6140507083378850689[225] = 0;
   out_6140507083378850689[226] = 0;
   out_6140507083378850689[227] = 0;
   out_6140507083378850689[228] = 0;
   out_6140507083378850689[229] = 0;
   out_6140507083378850689[230] = 0;
   out_6140507083378850689[231] = 0;
   out_6140507083378850689[232] = 0;
   out_6140507083378850689[233] = 0;
   out_6140507083378850689[234] = 0;
   out_6140507083378850689[235] = 0;
   out_6140507083378850689[236] = 0;
   out_6140507083378850689[237] = 0;
   out_6140507083378850689[238] = 0;
   out_6140507083378850689[239] = 0;
   out_6140507083378850689[240] = 0;
   out_6140507083378850689[241] = 1.0;
   out_6140507083378850689[242] = 0;
   out_6140507083378850689[243] = 0;
   out_6140507083378850689[244] = 0;
   out_6140507083378850689[245] = 0;
   out_6140507083378850689[246] = 0;
   out_6140507083378850689[247] = 0;
   out_6140507083378850689[248] = 0;
   out_6140507083378850689[249] = 0;
   out_6140507083378850689[250] = 0;
   out_6140507083378850689[251] = 0;
   out_6140507083378850689[252] = 0;
   out_6140507083378850689[253] = 0;
   out_6140507083378850689[254] = 0;
   out_6140507083378850689[255] = 0;
   out_6140507083378850689[256] = 0;
   out_6140507083378850689[257] = 0;
   out_6140507083378850689[258] = 0;
   out_6140507083378850689[259] = 0;
   out_6140507083378850689[260] = 0;
   out_6140507083378850689[261] = 0;
   out_6140507083378850689[262] = 0;
   out_6140507083378850689[263] = 1.0;
   out_6140507083378850689[264] = 0;
   out_6140507083378850689[265] = 0;
   out_6140507083378850689[266] = 0;
   out_6140507083378850689[267] = 0;
   out_6140507083378850689[268] = 0;
   out_6140507083378850689[269] = 0;
   out_6140507083378850689[270] = 0;
   out_6140507083378850689[271] = 0;
   out_6140507083378850689[272] = 0;
   out_6140507083378850689[273] = 0;
   out_6140507083378850689[274] = 0;
   out_6140507083378850689[275] = 0;
   out_6140507083378850689[276] = 0;
   out_6140507083378850689[277] = 0;
   out_6140507083378850689[278] = 0;
   out_6140507083378850689[279] = 0;
   out_6140507083378850689[280] = 0;
   out_6140507083378850689[281] = 0;
   out_6140507083378850689[282] = 0;
   out_6140507083378850689[283] = 0;
   out_6140507083378850689[284] = 0;
   out_6140507083378850689[285] = 1.0;
   out_6140507083378850689[286] = 0;
   out_6140507083378850689[287] = 0;
   out_6140507083378850689[288] = 0;
   out_6140507083378850689[289] = 0;
   out_6140507083378850689[290] = 0;
   out_6140507083378850689[291] = 0;
   out_6140507083378850689[292] = 0;
   out_6140507083378850689[293] = 0;
   out_6140507083378850689[294] = 0;
   out_6140507083378850689[295] = 0;
   out_6140507083378850689[296] = 0;
   out_6140507083378850689[297] = 0;
   out_6140507083378850689[298] = 0;
   out_6140507083378850689[299] = 0;
   out_6140507083378850689[300] = 0;
   out_6140507083378850689[301] = 0;
   out_6140507083378850689[302] = 0;
   out_6140507083378850689[303] = 0;
   out_6140507083378850689[304] = 0;
   out_6140507083378850689[305] = 0;
   out_6140507083378850689[306] = 0;
   out_6140507083378850689[307] = 1.0;
   out_6140507083378850689[308] = 0;
   out_6140507083378850689[309] = 0;
   out_6140507083378850689[310] = 0;
   out_6140507083378850689[311] = 0;
   out_6140507083378850689[312] = 0;
   out_6140507083378850689[313] = 0;
   out_6140507083378850689[314] = 0;
   out_6140507083378850689[315] = 0;
   out_6140507083378850689[316] = 0;
   out_6140507083378850689[317] = 0;
   out_6140507083378850689[318] = 0;
   out_6140507083378850689[319] = 0;
   out_6140507083378850689[320] = 0;
   out_6140507083378850689[321] = 0;
   out_6140507083378850689[322] = 0;
   out_6140507083378850689[323] = 0;
   out_6140507083378850689[324] = 0;
   out_6140507083378850689[325] = 0;
   out_6140507083378850689[326] = 0;
   out_6140507083378850689[327] = 0;
   out_6140507083378850689[328] = 0;
   out_6140507083378850689[329] = 1.0;
   out_6140507083378850689[330] = 0;
   out_6140507083378850689[331] = 0;
   out_6140507083378850689[332] = 0;
   out_6140507083378850689[333] = 0;
   out_6140507083378850689[334] = 0;
   out_6140507083378850689[335] = 0;
   out_6140507083378850689[336] = 0;
   out_6140507083378850689[337] = 0;
   out_6140507083378850689[338] = 0;
   out_6140507083378850689[339] = 0;
   out_6140507083378850689[340] = 0;
   out_6140507083378850689[341] = 0;
   out_6140507083378850689[342] = 0;
   out_6140507083378850689[343] = 0;
   out_6140507083378850689[344] = 0;
   out_6140507083378850689[345] = 0;
   out_6140507083378850689[346] = 0;
   out_6140507083378850689[347] = 0;
   out_6140507083378850689[348] = 0;
   out_6140507083378850689[349] = 0;
   out_6140507083378850689[350] = 0;
   out_6140507083378850689[351] = 1.0;
   out_6140507083378850689[352] = 0;
   out_6140507083378850689[353] = 0;
   out_6140507083378850689[354] = 0;
   out_6140507083378850689[355] = 0;
   out_6140507083378850689[356] = 0;
   out_6140507083378850689[357] = 0;
   out_6140507083378850689[358] = 0;
   out_6140507083378850689[359] = 0;
   out_6140507083378850689[360] = 0;
   out_6140507083378850689[361] = 0;
   out_6140507083378850689[362] = 0;
   out_6140507083378850689[363] = 0;
   out_6140507083378850689[364] = 0;
   out_6140507083378850689[365] = 0;
   out_6140507083378850689[366] = 0;
   out_6140507083378850689[367] = 0;
   out_6140507083378850689[368] = 0;
   out_6140507083378850689[369] = 0;
   out_6140507083378850689[370] = 0;
   out_6140507083378850689[371] = 0;
   out_6140507083378850689[372] = 0;
   out_6140507083378850689[373] = 1.0;
   out_6140507083378850689[374] = 0;
   out_6140507083378850689[375] = 0;
   out_6140507083378850689[376] = 0;
   out_6140507083378850689[377] = 0;
   out_6140507083378850689[378] = 0;
   out_6140507083378850689[379] = 0;
   out_6140507083378850689[380] = 0;
   out_6140507083378850689[381] = 0;
   out_6140507083378850689[382] = 0;
   out_6140507083378850689[383] = 0;
   out_6140507083378850689[384] = 0;
   out_6140507083378850689[385] = 0;
   out_6140507083378850689[386] = 0;
   out_6140507083378850689[387] = 0;
   out_6140507083378850689[388] = 0;
   out_6140507083378850689[389] = 0;
   out_6140507083378850689[390] = 0;
   out_6140507083378850689[391] = 0;
   out_6140507083378850689[392] = 0;
   out_6140507083378850689[393] = 0;
   out_6140507083378850689[394] = 0;
   out_6140507083378850689[395] = 1.0;
   out_6140507083378850689[396] = 0;
   out_6140507083378850689[397] = 0;
   out_6140507083378850689[398] = 0;
   out_6140507083378850689[399] = 0;
   out_6140507083378850689[400] = 0;
   out_6140507083378850689[401] = 0;
   out_6140507083378850689[402] = 0;
   out_6140507083378850689[403] = 0;
   out_6140507083378850689[404] = 0;
   out_6140507083378850689[405] = 0;
   out_6140507083378850689[406] = 0;
   out_6140507083378850689[407] = 0;
   out_6140507083378850689[408] = 0;
   out_6140507083378850689[409] = 0;
   out_6140507083378850689[410] = 0;
   out_6140507083378850689[411] = 0;
   out_6140507083378850689[412] = 0;
   out_6140507083378850689[413] = 0;
   out_6140507083378850689[414] = 0;
   out_6140507083378850689[415] = 0;
   out_6140507083378850689[416] = 0;
   out_6140507083378850689[417] = 1.0;
   out_6140507083378850689[418] = 0;
   out_6140507083378850689[419] = 0;
   out_6140507083378850689[420] = 0;
   out_6140507083378850689[421] = 0;
   out_6140507083378850689[422] = 0;
   out_6140507083378850689[423] = 0;
   out_6140507083378850689[424] = 0;
   out_6140507083378850689[425] = 0;
   out_6140507083378850689[426] = 0;
   out_6140507083378850689[427] = 0;
   out_6140507083378850689[428] = 0;
   out_6140507083378850689[429] = 0;
   out_6140507083378850689[430] = 0;
   out_6140507083378850689[431] = 0;
   out_6140507083378850689[432] = 0;
   out_6140507083378850689[433] = 0;
   out_6140507083378850689[434] = 0;
   out_6140507083378850689[435] = 0;
   out_6140507083378850689[436] = 0;
   out_6140507083378850689[437] = 0;
   out_6140507083378850689[438] = 0;
   out_6140507083378850689[439] = 1.0;
   out_6140507083378850689[440] = 0;
   out_6140507083378850689[441] = 0;
   out_6140507083378850689[442] = 0;
   out_6140507083378850689[443] = 0;
   out_6140507083378850689[444] = 0;
   out_6140507083378850689[445] = 0;
   out_6140507083378850689[446] = 0;
   out_6140507083378850689[447] = 0;
   out_6140507083378850689[448] = 0;
   out_6140507083378850689[449] = 0;
   out_6140507083378850689[450] = 0;
   out_6140507083378850689[451] = 0;
   out_6140507083378850689[452] = 0;
   out_6140507083378850689[453] = 0;
   out_6140507083378850689[454] = 0;
   out_6140507083378850689[455] = 0;
   out_6140507083378850689[456] = 0;
   out_6140507083378850689[457] = 0;
   out_6140507083378850689[458] = 0;
   out_6140507083378850689[459] = 0;
   out_6140507083378850689[460] = 0;
   out_6140507083378850689[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8342962912891581995) {
   out_8342962912891581995[0] = dt*state[7] + state[0];
   out_8342962912891581995[1] = dt*state[8] + state[1];
   out_8342962912891581995[2] = dt*state[9] + state[2];
   out_8342962912891581995[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8342962912891581995[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8342962912891581995[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8342962912891581995[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8342962912891581995[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8342962912891581995[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8342962912891581995[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8342962912891581995[10] = state[10];
   out_8342962912891581995[11] = state[11];
   out_8342962912891581995[12] = state[12];
   out_8342962912891581995[13] = state[13];
   out_8342962912891581995[14] = state[14];
   out_8342962912891581995[15] = state[15];
   out_8342962912891581995[16] = state[16];
   out_8342962912891581995[17] = state[17];
   out_8342962912891581995[18] = state[18];
   out_8342962912891581995[19] = state[19];
   out_8342962912891581995[20] = state[20];
   out_8342962912891581995[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1526442805071530398) {
   out_1526442805071530398[0] = 1;
   out_1526442805071530398[1] = 0;
   out_1526442805071530398[2] = 0;
   out_1526442805071530398[3] = 0;
   out_1526442805071530398[4] = 0;
   out_1526442805071530398[5] = 0;
   out_1526442805071530398[6] = dt;
   out_1526442805071530398[7] = 0;
   out_1526442805071530398[8] = 0;
   out_1526442805071530398[9] = 0;
   out_1526442805071530398[10] = 0;
   out_1526442805071530398[11] = 0;
   out_1526442805071530398[12] = 0;
   out_1526442805071530398[13] = 0;
   out_1526442805071530398[14] = 0;
   out_1526442805071530398[15] = 0;
   out_1526442805071530398[16] = 0;
   out_1526442805071530398[17] = 0;
   out_1526442805071530398[18] = 0;
   out_1526442805071530398[19] = 0;
   out_1526442805071530398[20] = 0;
   out_1526442805071530398[21] = 0;
   out_1526442805071530398[22] = 1;
   out_1526442805071530398[23] = 0;
   out_1526442805071530398[24] = 0;
   out_1526442805071530398[25] = 0;
   out_1526442805071530398[26] = 0;
   out_1526442805071530398[27] = 0;
   out_1526442805071530398[28] = dt;
   out_1526442805071530398[29] = 0;
   out_1526442805071530398[30] = 0;
   out_1526442805071530398[31] = 0;
   out_1526442805071530398[32] = 0;
   out_1526442805071530398[33] = 0;
   out_1526442805071530398[34] = 0;
   out_1526442805071530398[35] = 0;
   out_1526442805071530398[36] = 0;
   out_1526442805071530398[37] = 0;
   out_1526442805071530398[38] = 0;
   out_1526442805071530398[39] = 0;
   out_1526442805071530398[40] = 0;
   out_1526442805071530398[41] = 0;
   out_1526442805071530398[42] = 0;
   out_1526442805071530398[43] = 0;
   out_1526442805071530398[44] = 1;
   out_1526442805071530398[45] = 0;
   out_1526442805071530398[46] = 0;
   out_1526442805071530398[47] = 0;
   out_1526442805071530398[48] = 0;
   out_1526442805071530398[49] = 0;
   out_1526442805071530398[50] = dt;
   out_1526442805071530398[51] = 0;
   out_1526442805071530398[52] = 0;
   out_1526442805071530398[53] = 0;
   out_1526442805071530398[54] = 0;
   out_1526442805071530398[55] = 0;
   out_1526442805071530398[56] = 0;
   out_1526442805071530398[57] = 0;
   out_1526442805071530398[58] = 0;
   out_1526442805071530398[59] = 0;
   out_1526442805071530398[60] = 0;
   out_1526442805071530398[61] = 0;
   out_1526442805071530398[62] = 0;
   out_1526442805071530398[63] = 0;
   out_1526442805071530398[64] = 0;
   out_1526442805071530398[65] = 0;
   out_1526442805071530398[66] = 1;
   out_1526442805071530398[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1526442805071530398[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1526442805071530398[69] = 0;
   out_1526442805071530398[70] = 0;
   out_1526442805071530398[71] = 0;
   out_1526442805071530398[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1526442805071530398[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1526442805071530398[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1526442805071530398[75] = 0;
   out_1526442805071530398[76] = 0;
   out_1526442805071530398[77] = 0;
   out_1526442805071530398[78] = 0;
   out_1526442805071530398[79] = 0;
   out_1526442805071530398[80] = 0;
   out_1526442805071530398[81] = 0;
   out_1526442805071530398[82] = 0;
   out_1526442805071530398[83] = 0;
   out_1526442805071530398[84] = 0;
   out_1526442805071530398[85] = 0;
   out_1526442805071530398[86] = 0;
   out_1526442805071530398[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1526442805071530398[88] = 1;
   out_1526442805071530398[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1526442805071530398[90] = 0;
   out_1526442805071530398[91] = 0;
   out_1526442805071530398[92] = 0;
   out_1526442805071530398[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1526442805071530398[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1526442805071530398[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1526442805071530398[96] = 0;
   out_1526442805071530398[97] = 0;
   out_1526442805071530398[98] = 0;
   out_1526442805071530398[99] = 0;
   out_1526442805071530398[100] = 0;
   out_1526442805071530398[101] = 0;
   out_1526442805071530398[102] = 0;
   out_1526442805071530398[103] = 0;
   out_1526442805071530398[104] = 0;
   out_1526442805071530398[105] = 0;
   out_1526442805071530398[106] = 0;
   out_1526442805071530398[107] = 0;
   out_1526442805071530398[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1526442805071530398[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1526442805071530398[110] = 1;
   out_1526442805071530398[111] = 0;
   out_1526442805071530398[112] = 0;
   out_1526442805071530398[113] = 0;
   out_1526442805071530398[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1526442805071530398[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1526442805071530398[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1526442805071530398[117] = 0;
   out_1526442805071530398[118] = 0;
   out_1526442805071530398[119] = 0;
   out_1526442805071530398[120] = 0;
   out_1526442805071530398[121] = 0;
   out_1526442805071530398[122] = 0;
   out_1526442805071530398[123] = 0;
   out_1526442805071530398[124] = 0;
   out_1526442805071530398[125] = 0;
   out_1526442805071530398[126] = 0;
   out_1526442805071530398[127] = 0;
   out_1526442805071530398[128] = 0;
   out_1526442805071530398[129] = 0;
   out_1526442805071530398[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1526442805071530398[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1526442805071530398[132] = 1;
   out_1526442805071530398[133] = 0;
   out_1526442805071530398[134] = 0;
   out_1526442805071530398[135] = 0;
   out_1526442805071530398[136] = 0;
   out_1526442805071530398[137] = 0;
   out_1526442805071530398[138] = 0;
   out_1526442805071530398[139] = 0;
   out_1526442805071530398[140] = 0;
   out_1526442805071530398[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1526442805071530398[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1526442805071530398[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1526442805071530398[144] = 0;
   out_1526442805071530398[145] = 0;
   out_1526442805071530398[146] = 0;
   out_1526442805071530398[147] = 0;
   out_1526442805071530398[148] = 0;
   out_1526442805071530398[149] = 0;
   out_1526442805071530398[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1526442805071530398[151] = 0;
   out_1526442805071530398[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1526442805071530398[153] = 0;
   out_1526442805071530398[154] = 1;
   out_1526442805071530398[155] = 0;
   out_1526442805071530398[156] = 0;
   out_1526442805071530398[157] = 0;
   out_1526442805071530398[158] = 0;
   out_1526442805071530398[159] = 0;
   out_1526442805071530398[160] = 0;
   out_1526442805071530398[161] = 0;
   out_1526442805071530398[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1526442805071530398[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1526442805071530398[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1526442805071530398[165] = 0;
   out_1526442805071530398[166] = 0;
   out_1526442805071530398[167] = 0;
   out_1526442805071530398[168] = 0;
   out_1526442805071530398[169] = 0;
   out_1526442805071530398[170] = 0;
   out_1526442805071530398[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1526442805071530398[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1526442805071530398[173] = 0;
   out_1526442805071530398[174] = 0;
   out_1526442805071530398[175] = 0;
   out_1526442805071530398[176] = 1;
   out_1526442805071530398[177] = 0;
   out_1526442805071530398[178] = 0;
   out_1526442805071530398[179] = 0;
   out_1526442805071530398[180] = 0;
   out_1526442805071530398[181] = 0;
   out_1526442805071530398[182] = 0;
   out_1526442805071530398[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1526442805071530398[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1526442805071530398[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1526442805071530398[186] = 0;
   out_1526442805071530398[187] = 0;
   out_1526442805071530398[188] = 0;
   out_1526442805071530398[189] = 0;
   out_1526442805071530398[190] = 0;
   out_1526442805071530398[191] = 0;
   out_1526442805071530398[192] = 0;
   out_1526442805071530398[193] = 0;
   out_1526442805071530398[194] = 0;
   out_1526442805071530398[195] = 0;
   out_1526442805071530398[196] = 0;
   out_1526442805071530398[197] = 0;
   out_1526442805071530398[198] = 1;
   out_1526442805071530398[199] = 0;
   out_1526442805071530398[200] = 0;
   out_1526442805071530398[201] = 0;
   out_1526442805071530398[202] = 0;
   out_1526442805071530398[203] = 0;
   out_1526442805071530398[204] = 0;
   out_1526442805071530398[205] = 0;
   out_1526442805071530398[206] = 0;
   out_1526442805071530398[207] = 0;
   out_1526442805071530398[208] = 0;
   out_1526442805071530398[209] = 0;
   out_1526442805071530398[210] = 0;
   out_1526442805071530398[211] = 0;
   out_1526442805071530398[212] = 0;
   out_1526442805071530398[213] = 0;
   out_1526442805071530398[214] = 0;
   out_1526442805071530398[215] = 0;
   out_1526442805071530398[216] = 0;
   out_1526442805071530398[217] = 0;
   out_1526442805071530398[218] = 0;
   out_1526442805071530398[219] = 0;
   out_1526442805071530398[220] = 1;
   out_1526442805071530398[221] = 0;
   out_1526442805071530398[222] = 0;
   out_1526442805071530398[223] = 0;
   out_1526442805071530398[224] = 0;
   out_1526442805071530398[225] = 0;
   out_1526442805071530398[226] = 0;
   out_1526442805071530398[227] = 0;
   out_1526442805071530398[228] = 0;
   out_1526442805071530398[229] = 0;
   out_1526442805071530398[230] = 0;
   out_1526442805071530398[231] = 0;
   out_1526442805071530398[232] = 0;
   out_1526442805071530398[233] = 0;
   out_1526442805071530398[234] = 0;
   out_1526442805071530398[235] = 0;
   out_1526442805071530398[236] = 0;
   out_1526442805071530398[237] = 0;
   out_1526442805071530398[238] = 0;
   out_1526442805071530398[239] = 0;
   out_1526442805071530398[240] = 0;
   out_1526442805071530398[241] = 0;
   out_1526442805071530398[242] = 1;
   out_1526442805071530398[243] = 0;
   out_1526442805071530398[244] = 0;
   out_1526442805071530398[245] = 0;
   out_1526442805071530398[246] = 0;
   out_1526442805071530398[247] = 0;
   out_1526442805071530398[248] = 0;
   out_1526442805071530398[249] = 0;
   out_1526442805071530398[250] = 0;
   out_1526442805071530398[251] = 0;
   out_1526442805071530398[252] = 0;
   out_1526442805071530398[253] = 0;
   out_1526442805071530398[254] = 0;
   out_1526442805071530398[255] = 0;
   out_1526442805071530398[256] = 0;
   out_1526442805071530398[257] = 0;
   out_1526442805071530398[258] = 0;
   out_1526442805071530398[259] = 0;
   out_1526442805071530398[260] = 0;
   out_1526442805071530398[261] = 0;
   out_1526442805071530398[262] = 0;
   out_1526442805071530398[263] = 0;
   out_1526442805071530398[264] = 1;
   out_1526442805071530398[265] = 0;
   out_1526442805071530398[266] = 0;
   out_1526442805071530398[267] = 0;
   out_1526442805071530398[268] = 0;
   out_1526442805071530398[269] = 0;
   out_1526442805071530398[270] = 0;
   out_1526442805071530398[271] = 0;
   out_1526442805071530398[272] = 0;
   out_1526442805071530398[273] = 0;
   out_1526442805071530398[274] = 0;
   out_1526442805071530398[275] = 0;
   out_1526442805071530398[276] = 0;
   out_1526442805071530398[277] = 0;
   out_1526442805071530398[278] = 0;
   out_1526442805071530398[279] = 0;
   out_1526442805071530398[280] = 0;
   out_1526442805071530398[281] = 0;
   out_1526442805071530398[282] = 0;
   out_1526442805071530398[283] = 0;
   out_1526442805071530398[284] = 0;
   out_1526442805071530398[285] = 0;
   out_1526442805071530398[286] = 1;
   out_1526442805071530398[287] = 0;
   out_1526442805071530398[288] = 0;
   out_1526442805071530398[289] = 0;
   out_1526442805071530398[290] = 0;
   out_1526442805071530398[291] = 0;
   out_1526442805071530398[292] = 0;
   out_1526442805071530398[293] = 0;
   out_1526442805071530398[294] = 0;
   out_1526442805071530398[295] = 0;
   out_1526442805071530398[296] = 0;
   out_1526442805071530398[297] = 0;
   out_1526442805071530398[298] = 0;
   out_1526442805071530398[299] = 0;
   out_1526442805071530398[300] = 0;
   out_1526442805071530398[301] = 0;
   out_1526442805071530398[302] = 0;
   out_1526442805071530398[303] = 0;
   out_1526442805071530398[304] = 0;
   out_1526442805071530398[305] = 0;
   out_1526442805071530398[306] = 0;
   out_1526442805071530398[307] = 0;
   out_1526442805071530398[308] = 1;
   out_1526442805071530398[309] = 0;
   out_1526442805071530398[310] = 0;
   out_1526442805071530398[311] = 0;
   out_1526442805071530398[312] = 0;
   out_1526442805071530398[313] = 0;
   out_1526442805071530398[314] = 0;
   out_1526442805071530398[315] = 0;
   out_1526442805071530398[316] = 0;
   out_1526442805071530398[317] = 0;
   out_1526442805071530398[318] = 0;
   out_1526442805071530398[319] = 0;
   out_1526442805071530398[320] = 0;
   out_1526442805071530398[321] = 0;
   out_1526442805071530398[322] = 0;
   out_1526442805071530398[323] = 0;
   out_1526442805071530398[324] = 0;
   out_1526442805071530398[325] = 0;
   out_1526442805071530398[326] = 0;
   out_1526442805071530398[327] = 0;
   out_1526442805071530398[328] = 0;
   out_1526442805071530398[329] = 0;
   out_1526442805071530398[330] = 1;
   out_1526442805071530398[331] = 0;
   out_1526442805071530398[332] = 0;
   out_1526442805071530398[333] = 0;
   out_1526442805071530398[334] = 0;
   out_1526442805071530398[335] = 0;
   out_1526442805071530398[336] = 0;
   out_1526442805071530398[337] = 0;
   out_1526442805071530398[338] = 0;
   out_1526442805071530398[339] = 0;
   out_1526442805071530398[340] = 0;
   out_1526442805071530398[341] = 0;
   out_1526442805071530398[342] = 0;
   out_1526442805071530398[343] = 0;
   out_1526442805071530398[344] = 0;
   out_1526442805071530398[345] = 0;
   out_1526442805071530398[346] = 0;
   out_1526442805071530398[347] = 0;
   out_1526442805071530398[348] = 0;
   out_1526442805071530398[349] = 0;
   out_1526442805071530398[350] = 0;
   out_1526442805071530398[351] = 0;
   out_1526442805071530398[352] = 1;
   out_1526442805071530398[353] = 0;
   out_1526442805071530398[354] = 0;
   out_1526442805071530398[355] = 0;
   out_1526442805071530398[356] = 0;
   out_1526442805071530398[357] = 0;
   out_1526442805071530398[358] = 0;
   out_1526442805071530398[359] = 0;
   out_1526442805071530398[360] = 0;
   out_1526442805071530398[361] = 0;
   out_1526442805071530398[362] = 0;
   out_1526442805071530398[363] = 0;
   out_1526442805071530398[364] = 0;
   out_1526442805071530398[365] = 0;
   out_1526442805071530398[366] = 0;
   out_1526442805071530398[367] = 0;
   out_1526442805071530398[368] = 0;
   out_1526442805071530398[369] = 0;
   out_1526442805071530398[370] = 0;
   out_1526442805071530398[371] = 0;
   out_1526442805071530398[372] = 0;
   out_1526442805071530398[373] = 0;
   out_1526442805071530398[374] = 1;
   out_1526442805071530398[375] = 0;
   out_1526442805071530398[376] = 0;
   out_1526442805071530398[377] = 0;
   out_1526442805071530398[378] = 0;
   out_1526442805071530398[379] = 0;
   out_1526442805071530398[380] = 0;
   out_1526442805071530398[381] = 0;
   out_1526442805071530398[382] = 0;
   out_1526442805071530398[383] = 0;
   out_1526442805071530398[384] = 0;
   out_1526442805071530398[385] = 0;
   out_1526442805071530398[386] = 0;
   out_1526442805071530398[387] = 0;
   out_1526442805071530398[388] = 0;
   out_1526442805071530398[389] = 0;
   out_1526442805071530398[390] = 0;
   out_1526442805071530398[391] = 0;
   out_1526442805071530398[392] = 0;
   out_1526442805071530398[393] = 0;
   out_1526442805071530398[394] = 0;
   out_1526442805071530398[395] = 0;
   out_1526442805071530398[396] = 1;
   out_1526442805071530398[397] = 0;
   out_1526442805071530398[398] = 0;
   out_1526442805071530398[399] = 0;
   out_1526442805071530398[400] = 0;
   out_1526442805071530398[401] = 0;
   out_1526442805071530398[402] = 0;
   out_1526442805071530398[403] = 0;
   out_1526442805071530398[404] = 0;
   out_1526442805071530398[405] = 0;
   out_1526442805071530398[406] = 0;
   out_1526442805071530398[407] = 0;
   out_1526442805071530398[408] = 0;
   out_1526442805071530398[409] = 0;
   out_1526442805071530398[410] = 0;
   out_1526442805071530398[411] = 0;
   out_1526442805071530398[412] = 0;
   out_1526442805071530398[413] = 0;
   out_1526442805071530398[414] = 0;
   out_1526442805071530398[415] = 0;
   out_1526442805071530398[416] = 0;
   out_1526442805071530398[417] = 0;
   out_1526442805071530398[418] = 1;
   out_1526442805071530398[419] = 0;
   out_1526442805071530398[420] = 0;
   out_1526442805071530398[421] = 0;
   out_1526442805071530398[422] = 0;
   out_1526442805071530398[423] = 0;
   out_1526442805071530398[424] = 0;
   out_1526442805071530398[425] = 0;
   out_1526442805071530398[426] = 0;
   out_1526442805071530398[427] = 0;
   out_1526442805071530398[428] = 0;
   out_1526442805071530398[429] = 0;
   out_1526442805071530398[430] = 0;
   out_1526442805071530398[431] = 0;
   out_1526442805071530398[432] = 0;
   out_1526442805071530398[433] = 0;
   out_1526442805071530398[434] = 0;
   out_1526442805071530398[435] = 0;
   out_1526442805071530398[436] = 0;
   out_1526442805071530398[437] = 0;
   out_1526442805071530398[438] = 0;
   out_1526442805071530398[439] = 0;
   out_1526442805071530398[440] = 1;
}
void h_4(double *state, double *unused, double *out_2670771569647076777) {
   out_2670771569647076777[0] = state[10] + state[13];
   out_2670771569647076777[1] = state[11] + state[14];
   out_2670771569647076777[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4218719645024462601) {
   out_4218719645024462601[0] = 0;
   out_4218719645024462601[1] = 0;
   out_4218719645024462601[2] = 0;
   out_4218719645024462601[3] = 0;
   out_4218719645024462601[4] = 0;
   out_4218719645024462601[5] = 0;
   out_4218719645024462601[6] = 0;
   out_4218719645024462601[7] = 0;
   out_4218719645024462601[8] = 0;
   out_4218719645024462601[9] = 0;
   out_4218719645024462601[10] = 1;
   out_4218719645024462601[11] = 0;
   out_4218719645024462601[12] = 0;
   out_4218719645024462601[13] = 1;
   out_4218719645024462601[14] = 0;
   out_4218719645024462601[15] = 0;
   out_4218719645024462601[16] = 0;
   out_4218719645024462601[17] = 0;
   out_4218719645024462601[18] = 0;
   out_4218719645024462601[19] = 0;
   out_4218719645024462601[20] = 0;
   out_4218719645024462601[21] = 0;
   out_4218719645024462601[22] = 0;
   out_4218719645024462601[23] = 0;
   out_4218719645024462601[24] = 0;
   out_4218719645024462601[25] = 0;
   out_4218719645024462601[26] = 0;
   out_4218719645024462601[27] = 0;
   out_4218719645024462601[28] = 0;
   out_4218719645024462601[29] = 0;
   out_4218719645024462601[30] = 0;
   out_4218719645024462601[31] = 0;
   out_4218719645024462601[32] = 0;
   out_4218719645024462601[33] = 1;
   out_4218719645024462601[34] = 0;
   out_4218719645024462601[35] = 0;
   out_4218719645024462601[36] = 1;
   out_4218719645024462601[37] = 0;
   out_4218719645024462601[38] = 0;
   out_4218719645024462601[39] = 0;
   out_4218719645024462601[40] = 0;
   out_4218719645024462601[41] = 0;
   out_4218719645024462601[42] = 0;
   out_4218719645024462601[43] = 0;
   out_4218719645024462601[44] = 0;
   out_4218719645024462601[45] = 0;
   out_4218719645024462601[46] = 0;
   out_4218719645024462601[47] = 0;
   out_4218719645024462601[48] = 0;
   out_4218719645024462601[49] = 0;
   out_4218719645024462601[50] = 0;
   out_4218719645024462601[51] = 0;
   out_4218719645024462601[52] = 0;
   out_4218719645024462601[53] = 0;
   out_4218719645024462601[54] = 0;
   out_4218719645024462601[55] = 0;
   out_4218719645024462601[56] = 1;
   out_4218719645024462601[57] = 0;
   out_4218719645024462601[58] = 0;
   out_4218719645024462601[59] = 1;
   out_4218719645024462601[60] = 0;
   out_4218719645024462601[61] = 0;
   out_4218719645024462601[62] = 0;
   out_4218719645024462601[63] = 0;
   out_4218719645024462601[64] = 0;
   out_4218719645024462601[65] = 0;
}
void h_9(double *state, double *unused, double *out_6675251998404262248) {
   out_6675251998404262248[0] = state[10];
   out_6675251998404262248[1] = state[11];
   out_6675251998404262248[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3977529998394871956) {
   out_3977529998394871956[0] = 0;
   out_3977529998394871956[1] = 0;
   out_3977529998394871956[2] = 0;
   out_3977529998394871956[3] = 0;
   out_3977529998394871956[4] = 0;
   out_3977529998394871956[5] = 0;
   out_3977529998394871956[6] = 0;
   out_3977529998394871956[7] = 0;
   out_3977529998394871956[8] = 0;
   out_3977529998394871956[9] = 0;
   out_3977529998394871956[10] = 1;
   out_3977529998394871956[11] = 0;
   out_3977529998394871956[12] = 0;
   out_3977529998394871956[13] = 0;
   out_3977529998394871956[14] = 0;
   out_3977529998394871956[15] = 0;
   out_3977529998394871956[16] = 0;
   out_3977529998394871956[17] = 0;
   out_3977529998394871956[18] = 0;
   out_3977529998394871956[19] = 0;
   out_3977529998394871956[20] = 0;
   out_3977529998394871956[21] = 0;
   out_3977529998394871956[22] = 0;
   out_3977529998394871956[23] = 0;
   out_3977529998394871956[24] = 0;
   out_3977529998394871956[25] = 0;
   out_3977529998394871956[26] = 0;
   out_3977529998394871956[27] = 0;
   out_3977529998394871956[28] = 0;
   out_3977529998394871956[29] = 0;
   out_3977529998394871956[30] = 0;
   out_3977529998394871956[31] = 0;
   out_3977529998394871956[32] = 0;
   out_3977529998394871956[33] = 1;
   out_3977529998394871956[34] = 0;
   out_3977529998394871956[35] = 0;
   out_3977529998394871956[36] = 0;
   out_3977529998394871956[37] = 0;
   out_3977529998394871956[38] = 0;
   out_3977529998394871956[39] = 0;
   out_3977529998394871956[40] = 0;
   out_3977529998394871956[41] = 0;
   out_3977529998394871956[42] = 0;
   out_3977529998394871956[43] = 0;
   out_3977529998394871956[44] = 0;
   out_3977529998394871956[45] = 0;
   out_3977529998394871956[46] = 0;
   out_3977529998394871956[47] = 0;
   out_3977529998394871956[48] = 0;
   out_3977529998394871956[49] = 0;
   out_3977529998394871956[50] = 0;
   out_3977529998394871956[51] = 0;
   out_3977529998394871956[52] = 0;
   out_3977529998394871956[53] = 0;
   out_3977529998394871956[54] = 0;
   out_3977529998394871956[55] = 0;
   out_3977529998394871956[56] = 1;
   out_3977529998394871956[57] = 0;
   out_3977529998394871956[58] = 0;
   out_3977529998394871956[59] = 0;
   out_3977529998394871956[60] = 0;
   out_3977529998394871956[61] = 0;
   out_3977529998394871956[62] = 0;
   out_3977529998394871956[63] = 0;
   out_3977529998394871956[64] = 0;
   out_3977529998394871956[65] = 0;
}
void h_10(double *state, double *unused, double *out_1276204232902478899) {
   out_1276204232902478899[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1276204232902478899[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1276204232902478899[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6757950970174612806) {
   out_6757950970174612806[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6757950970174612806[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6757950970174612806[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6757950970174612806[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757950970174612806[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757950970174612806[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757950970174612806[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757950970174612806[7] = 0;
   out_6757950970174612806[8] = 0;
   out_6757950970174612806[9] = 0;
   out_6757950970174612806[10] = 0;
   out_6757950970174612806[11] = 0;
   out_6757950970174612806[12] = 0;
   out_6757950970174612806[13] = 0;
   out_6757950970174612806[14] = 0;
   out_6757950970174612806[15] = 0;
   out_6757950970174612806[16] = 1;
   out_6757950970174612806[17] = 0;
   out_6757950970174612806[18] = 0;
   out_6757950970174612806[19] = 1;
   out_6757950970174612806[20] = 0;
   out_6757950970174612806[21] = 0;
   out_6757950970174612806[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6757950970174612806[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6757950970174612806[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6757950970174612806[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757950970174612806[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757950970174612806[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757950970174612806[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757950970174612806[29] = 0;
   out_6757950970174612806[30] = 0;
   out_6757950970174612806[31] = 0;
   out_6757950970174612806[32] = 0;
   out_6757950970174612806[33] = 0;
   out_6757950970174612806[34] = 0;
   out_6757950970174612806[35] = 0;
   out_6757950970174612806[36] = 0;
   out_6757950970174612806[37] = 0;
   out_6757950970174612806[38] = 0;
   out_6757950970174612806[39] = 1;
   out_6757950970174612806[40] = 0;
   out_6757950970174612806[41] = 0;
   out_6757950970174612806[42] = 1;
   out_6757950970174612806[43] = 0;
   out_6757950970174612806[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6757950970174612806[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6757950970174612806[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6757950970174612806[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6757950970174612806[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6757950970174612806[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6757950970174612806[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6757950970174612806[51] = 0;
   out_6757950970174612806[52] = 0;
   out_6757950970174612806[53] = 0;
   out_6757950970174612806[54] = 0;
   out_6757950970174612806[55] = 0;
   out_6757950970174612806[56] = 0;
   out_6757950970174612806[57] = 0;
   out_6757950970174612806[58] = 0;
   out_6757950970174612806[59] = 0;
   out_6757950970174612806[60] = 0;
   out_6757950970174612806[61] = 0;
   out_6757950970174612806[62] = 1;
   out_6757950970174612806[63] = 0;
   out_6757950970174612806[64] = 0;
   out_6757950970174612806[65] = 1;
}
void h_12(double *state, double *unused, double *out_2978561226524827777) {
   out_2978561226524827777[0] = state[0];
   out_2978561226524827777[1] = state[1];
   out_2978561226524827777[2] = state[2];
}
void H_12(double *state, double *unused, double *out_800736763007499194) {
   out_800736763007499194[0] = 1;
   out_800736763007499194[1] = 0;
   out_800736763007499194[2] = 0;
   out_800736763007499194[3] = 0;
   out_800736763007499194[4] = 0;
   out_800736763007499194[5] = 0;
   out_800736763007499194[6] = 0;
   out_800736763007499194[7] = 0;
   out_800736763007499194[8] = 0;
   out_800736763007499194[9] = 0;
   out_800736763007499194[10] = 0;
   out_800736763007499194[11] = 0;
   out_800736763007499194[12] = 0;
   out_800736763007499194[13] = 0;
   out_800736763007499194[14] = 0;
   out_800736763007499194[15] = 0;
   out_800736763007499194[16] = 0;
   out_800736763007499194[17] = 0;
   out_800736763007499194[18] = 0;
   out_800736763007499194[19] = 0;
   out_800736763007499194[20] = 0;
   out_800736763007499194[21] = 0;
   out_800736763007499194[22] = 0;
   out_800736763007499194[23] = 1;
   out_800736763007499194[24] = 0;
   out_800736763007499194[25] = 0;
   out_800736763007499194[26] = 0;
   out_800736763007499194[27] = 0;
   out_800736763007499194[28] = 0;
   out_800736763007499194[29] = 0;
   out_800736763007499194[30] = 0;
   out_800736763007499194[31] = 0;
   out_800736763007499194[32] = 0;
   out_800736763007499194[33] = 0;
   out_800736763007499194[34] = 0;
   out_800736763007499194[35] = 0;
   out_800736763007499194[36] = 0;
   out_800736763007499194[37] = 0;
   out_800736763007499194[38] = 0;
   out_800736763007499194[39] = 0;
   out_800736763007499194[40] = 0;
   out_800736763007499194[41] = 0;
   out_800736763007499194[42] = 0;
   out_800736763007499194[43] = 0;
   out_800736763007499194[44] = 0;
   out_800736763007499194[45] = 0;
   out_800736763007499194[46] = 1;
   out_800736763007499194[47] = 0;
   out_800736763007499194[48] = 0;
   out_800736763007499194[49] = 0;
   out_800736763007499194[50] = 0;
   out_800736763007499194[51] = 0;
   out_800736763007499194[52] = 0;
   out_800736763007499194[53] = 0;
   out_800736763007499194[54] = 0;
   out_800736763007499194[55] = 0;
   out_800736763007499194[56] = 0;
   out_800736763007499194[57] = 0;
   out_800736763007499194[58] = 0;
   out_800736763007499194[59] = 0;
   out_800736763007499194[60] = 0;
   out_800736763007499194[61] = 0;
   out_800736763007499194[62] = 0;
   out_800736763007499194[63] = 0;
   out_800736763007499194[64] = 0;
   out_800736763007499194[65] = 0;
}
void h_31(double *state, double *unused, double *out_2413691193150815936) {
   out_2413691193150815936[0] = state[7];
   out_2413691193150815936[1] = state[8];
   out_2413691193150815936[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3546299795332512903) {
   out_3546299795332512903[0] = 0;
   out_3546299795332512903[1] = 0;
   out_3546299795332512903[2] = 0;
   out_3546299795332512903[3] = 0;
   out_3546299795332512903[4] = 0;
   out_3546299795332512903[5] = 0;
   out_3546299795332512903[6] = 0;
   out_3546299795332512903[7] = 1;
   out_3546299795332512903[8] = 0;
   out_3546299795332512903[9] = 0;
   out_3546299795332512903[10] = 0;
   out_3546299795332512903[11] = 0;
   out_3546299795332512903[12] = 0;
   out_3546299795332512903[13] = 0;
   out_3546299795332512903[14] = 0;
   out_3546299795332512903[15] = 0;
   out_3546299795332512903[16] = 0;
   out_3546299795332512903[17] = 0;
   out_3546299795332512903[18] = 0;
   out_3546299795332512903[19] = 0;
   out_3546299795332512903[20] = 0;
   out_3546299795332512903[21] = 0;
   out_3546299795332512903[22] = 0;
   out_3546299795332512903[23] = 0;
   out_3546299795332512903[24] = 0;
   out_3546299795332512903[25] = 0;
   out_3546299795332512903[26] = 0;
   out_3546299795332512903[27] = 0;
   out_3546299795332512903[28] = 0;
   out_3546299795332512903[29] = 0;
   out_3546299795332512903[30] = 1;
   out_3546299795332512903[31] = 0;
   out_3546299795332512903[32] = 0;
   out_3546299795332512903[33] = 0;
   out_3546299795332512903[34] = 0;
   out_3546299795332512903[35] = 0;
   out_3546299795332512903[36] = 0;
   out_3546299795332512903[37] = 0;
   out_3546299795332512903[38] = 0;
   out_3546299795332512903[39] = 0;
   out_3546299795332512903[40] = 0;
   out_3546299795332512903[41] = 0;
   out_3546299795332512903[42] = 0;
   out_3546299795332512903[43] = 0;
   out_3546299795332512903[44] = 0;
   out_3546299795332512903[45] = 0;
   out_3546299795332512903[46] = 0;
   out_3546299795332512903[47] = 0;
   out_3546299795332512903[48] = 0;
   out_3546299795332512903[49] = 0;
   out_3546299795332512903[50] = 0;
   out_3546299795332512903[51] = 0;
   out_3546299795332512903[52] = 0;
   out_3546299795332512903[53] = 1;
   out_3546299795332512903[54] = 0;
   out_3546299795332512903[55] = 0;
   out_3546299795332512903[56] = 0;
   out_3546299795332512903[57] = 0;
   out_3546299795332512903[58] = 0;
   out_3546299795332512903[59] = 0;
   out_3546299795332512903[60] = 0;
   out_3546299795332512903[61] = 0;
   out_3546299795332512903[62] = 0;
   out_3546299795332512903[63] = 0;
   out_3546299795332512903[64] = 0;
   out_3546299795332512903[65] = 0;
}
void h_32(double *state, double *unused, double *out_3243039148850874459) {
   out_3243039148850874459[0] = state[3];
   out_3243039148850874459[1] = state[4];
   out_3243039148850874459[2] = state[5];
   out_3243039148850874459[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4520284407358662164) {
   out_4520284407358662164[0] = 0;
   out_4520284407358662164[1] = 0;
   out_4520284407358662164[2] = 0;
   out_4520284407358662164[3] = 1;
   out_4520284407358662164[4] = 0;
   out_4520284407358662164[5] = 0;
   out_4520284407358662164[6] = 0;
   out_4520284407358662164[7] = 0;
   out_4520284407358662164[8] = 0;
   out_4520284407358662164[9] = 0;
   out_4520284407358662164[10] = 0;
   out_4520284407358662164[11] = 0;
   out_4520284407358662164[12] = 0;
   out_4520284407358662164[13] = 0;
   out_4520284407358662164[14] = 0;
   out_4520284407358662164[15] = 0;
   out_4520284407358662164[16] = 0;
   out_4520284407358662164[17] = 0;
   out_4520284407358662164[18] = 0;
   out_4520284407358662164[19] = 0;
   out_4520284407358662164[20] = 0;
   out_4520284407358662164[21] = 0;
   out_4520284407358662164[22] = 0;
   out_4520284407358662164[23] = 0;
   out_4520284407358662164[24] = 0;
   out_4520284407358662164[25] = 0;
   out_4520284407358662164[26] = 1;
   out_4520284407358662164[27] = 0;
   out_4520284407358662164[28] = 0;
   out_4520284407358662164[29] = 0;
   out_4520284407358662164[30] = 0;
   out_4520284407358662164[31] = 0;
   out_4520284407358662164[32] = 0;
   out_4520284407358662164[33] = 0;
   out_4520284407358662164[34] = 0;
   out_4520284407358662164[35] = 0;
   out_4520284407358662164[36] = 0;
   out_4520284407358662164[37] = 0;
   out_4520284407358662164[38] = 0;
   out_4520284407358662164[39] = 0;
   out_4520284407358662164[40] = 0;
   out_4520284407358662164[41] = 0;
   out_4520284407358662164[42] = 0;
   out_4520284407358662164[43] = 0;
   out_4520284407358662164[44] = 0;
   out_4520284407358662164[45] = 0;
   out_4520284407358662164[46] = 0;
   out_4520284407358662164[47] = 0;
   out_4520284407358662164[48] = 0;
   out_4520284407358662164[49] = 1;
   out_4520284407358662164[50] = 0;
   out_4520284407358662164[51] = 0;
   out_4520284407358662164[52] = 0;
   out_4520284407358662164[53] = 0;
   out_4520284407358662164[54] = 0;
   out_4520284407358662164[55] = 0;
   out_4520284407358662164[56] = 0;
   out_4520284407358662164[57] = 0;
   out_4520284407358662164[58] = 0;
   out_4520284407358662164[59] = 0;
   out_4520284407358662164[60] = 0;
   out_4520284407358662164[61] = 0;
   out_4520284407358662164[62] = 0;
   out_4520284407358662164[63] = 0;
   out_4520284407358662164[64] = 0;
   out_4520284407358662164[65] = 0;
   out_4520284407358662164[66] = 0;
   out_4520284407358662164[67] = 0;
   out_4520284407358662164[68] = 0;
   out_4520284407358662164[69] = 0;
   out_4520284407358662164[70] = 0;
   out_4520284407358662164[71] = 0;
   out_4520284407358662164[72] = 1;
   out_4520284407358662164[73] = 0;
   out_4520284407358662164[74] = 0;
   out_4520284407358662164[75] = 0;
   out_4520284407358662164[76] = 0;
   out_4520284407358662164[77] = 0;
   out_4520284407358662164[78] = 0;
   out_4520284407358662164[79] = 0;
   out_4520284407358662164[80] = 0;
   out_4520284407358662164[81] = 0;
   out_4520284407358662164[82] = 0;
   out_4520284407358662164[83] = 0;
   out_4520284407358662164[84] = 0;
   out_4520284407358662164[85] = 0;
   out_4520284407358662164[86] = 0;
   out_4520284407358662164[87] = 0;
}
void h_13(double *state, double *unused, double *out_4786736807995769626) {
   out_4786736807995769626[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4786736807995769626[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4786736807995769626[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6288316727689772411) {
   out_6288316727689772411[0] = 0;
   out_6288316727689772411[1] = 0;
   out_6288316727689772411[2] = 0;
   out_6288316727689772411[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6288316727689772411[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6288316727689772411[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6288316727689772411[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6288316727689772411[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6288316727689772411[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6288316727689772411[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6288316727689772411[10] = 0;
   out_6288316727689772411[11] = 0;
   out_6288316727689772411[12] = 0;
   out_6288316727689772411[13] = 0;
   out_6288316727689772411[14] = 0;
   out_6288316727689772411[15] = 0;
   out_6288316727689772411[16] = 0;
   out_6288316727689772411[17] = 0;
   out_6288316727689772411[18] = 0;
   out_6288316727689772411[19] = 0;
   out_6288316727689772411[20] = 0;
   out_6288316727689772411[21] = 0;
   out_6288316727689772411[22] = 0;
   out_6288316727689772411[23] = 0;
   out_6288316727689772411[24] = 0;
   out_6288316727689772411[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6288316727689772411[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6288316727689772411[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6288316727689772411[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6288316727689772411[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6288316727689772411[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6288316727689772411[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6288316727689772411[32] = 0;
   out_6288316727689772411[33] = 0;
   out_6288316727689772411[34] = 0;
   out_6288316727689772411[35] = 0;
   out_6288316727689772411[36] = 0;
   out_6288316727689772411[37] = 0;
   out_6288316727689772411[38] = 0;
   out_6288316727689772411[39] = 0;
   out_6288316727689772411[40] = 0;
   out_6288316727689772411[41] = 0;
   out_6288316727689772411[42] = 0;
   out_6288316727689772411[43] = 0;
   out_6288316727689772411[44] = 0;
   out_6288316727689772411[45] = 0;
   out_6288316727689772411[46] = 0;
   out_6288316727689772411[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6288316727689772411[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6288316727689772411[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6288316727689772411[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6288316727689772411[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6288316727689772411[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6288316727689772411[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6288316727689772411[54] = 0;
   out_6288316727689772411[55] = 0;
   out_6288316727689772411[56] = 0;
   out_6288316727689772411[57] = 0;
   out_6288316727689772411[58] = 0;
   out_6288316727689772411[59] = 0;
   out_6288316727689772411[60] = 0;
   out_6288316727689772411[61] = 0;
   out_6288316727689772411[62] = 0;
   out_6288316727689772411[63] = 0;
   out_6288316727689772411[64] = 0;
   out_6288316727689772411[65] = 0;
}
void h_14(double *state, double *unused, double *out_6675251998404262248) {
   out_6675251998404262248[0] = state[10];
   out_6675251998404262248[1] = state[11];
   out_6675251998404262248[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3977529998394871956) {
   out_3977529998394871956[0] = 0;
   out_3977529998394871956[1] = 0;
   out_3977529998394871956[2] = 0;
   out_3977529998394871956[3] = 0;
   out_3977529998394871956[4] = 0;
   out_3977529998394871956[5] = 0;
   out_3977529998394871956[6] = 0;
   out_3977529998394871956[7] = 0;
   out_3977529998394871956[8] = 0;
   out_3977529998394871956[9] = 0;
   out_3977529998394871956[10] = 1;
   out_3977529998394871956[11] = 0;
   out_3977529998394871956[12] = 0;
   out_3977529998394871956[13] = 0;
   out_3977529998394871956[14] = 0;
   out_3977529998394871956[15] = 0;
   out_3977529998394871956[16] = 0;
   out_3977529998394871956[17] = 0;
   out_3977529998394871956[18] = 0;
   out_3977529998394871956[19] = 0;
   out_3977529998394871956[20] = 0;
   out_3977529998394871956[21] = 0;
   out_3977529998394871956[22] = 0;
   out_3977529998394871956[23] = 0;
   out_3977529998394871956[24] = 0;
   out_3977529998394871956[25] = 0;
   out_3977529998394871956[26] = 0;
   out_3977529998394871956[27] = 0;
   out_3977529998394871956[28] = 0;
   out_3977529998394871956[29] = 0;
   out_3977529998394871956[30] = 0;
   out_3977529998394871956[31] = 0;
   out_3977529998394871956[32] = 0;
   out_3977529998394871956[33] = 1;
   out_3977529998394871956[34] = 0;
   out_3977529998394871956[35] = 0;
   out_3977529998394871956[36] = 0;
   out_3977529998394871956[37] = 0;
   out_3977529998394871956[38] = 0;
   out_3977529998394871956[39] = 0;
   out_3977529998394871956[40] = 0;
   out_3977529998394871956[41] = 0;
   out_3977529998394871956[42] = 0;
   out_3977529998394871956[43] = 0;
   out_3977529998394871956[44] = 0;
   out_3977529998394871956[45] = 0;
   out_3977529998394871956[46] = 0;
   out_3977529998394871956[47] = 0;
   out_3977529998394871956[48] = 0;
   out_3977529998394871956[49] = 0;
   out_3977529998394871956[50] = 0;
   out_3977529998394871956[51] = 0;
   out_3977529998394871956[52] = 0;
   out_3977529998394871956[53] = 0;
   out_3977529998394871956[54] = 0;
   out_3977529998394871956[55] = 0;
   out_3977529998394871956[56] = 1;
   out_3977529998394871956[57] = 0;
   out_3977529998394871956[58] = 0;
   out_3977529998394871956[59] = 0;
   out_3977529998394871956[60] = 0;
   out_3977529998394871956[61] = 0;
   out_3977529998394871956[62] = 0;
   out_3977529998394871956[63] = 0;
   out_3977529998394871956[64] = 0;
   out_3977529998394871956[65] = 0;
}
void h_33(double *state, double *unused, double *out_7896467299687702405) {
   out_7896467299687702405[0] = state[16];
   out_7896467299687702405[1] = state[17];
   out_7896467299687702405[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6696856799971370507) {
   out_6696856799971370507[0] = 0;
   out_6696856799971370507[1] = 0;
   out_6696856799971370507[2] = 0;
   out_6696856799971370507[3] = 0;
   out_6696856799971370507[4] = 0;
   out_6696856799971370507[5] = 0;
   out_6696856799971370507[6] = 0;
   out_6696856799971370507[7] = 0;
   out_6696856799971370507[8] = 0;
   out_6696856799971370507[9] = 0;
   out_6696856799971370507[10] = 0;
   out_6696856799971370507[11] = 0;
   out_6696856799971370507[12] = 0;
   out_6696856799971370507[13] = 0;
   out_6696856799971370507[14] = 0;
   out_6696856799971370507[15] = 0;
   out_6696856799971370507[16] = 1;
   out_6696856799971370507[17] = 0;
   out_6696856799971370507[18] = 0;
   out_6696856799971370507[19] = 0;
   out_6696856799971370507[20] = 0;
   out_6696856799971370507[21] = 0;
   out_6696856799971370507[22] = 0;
   out_6696856799971370507[23] = 0;
   out_6696856799971370507[24] = 0;
   out_6696856799971370507[25] = 0;
   out_6696856799971370507[26] = 0;
   out_6696856799971370507[27] = 0;
   out_6696856799971370507[28] = 0;
   out_6696856799971370507[29] = 0;
   out_6696856799971370507[30] = 0;
   out_6696856799971370507[31] = 0;
   out_6696856799971370507[32] = 0;
   out_6696856799971370507[33] = 0;
   out_6696856799971370507[34] = 0;
   out_6696856799971370507[35] = 0;
   out_6696856799971370507[36] = 0;
   out_6696856799971370507[37] = 0;
   out_6696856799971370507[38] = 0;
   out_6696856799971370507[39] = 1;
   out_6696856799971370507[40] = 0;
   out_6696856799971370507[41] = 0;
   out_6696856799971370507[42] = 0;
   out_6696856799971370507[43] = 0;
   out_6696856799971370507[44] = 0;
   out_6696856799971370507[45] = 0;
   out_6696856799971370507[46] = 0;
   out_6696856799971370507[47] = 0;
   out_6696856799971370507[48] = 0;
   out_6696856799971370507[49] = 0;
   out_6696856799971370507[50] = 0;
   out_6696856799971370507[51] = 0;
   out_6696856799971370507[52] = 0;
   out_6696856799971370507[53] = 0;
   out_6696856799971370507[54] = 0;
   out_6696856799971370507[55] = 0;
   out_6696856799971370507[56] = 0;
   out_6696856799971370507[57] = 0;
   out_6696856799971370507[58] = 0;
   out_6696856799971370507[59] = 0;
   out_6696856799971370507[60] = 0;
   out_6696856799971370507[61] = 0;
   out_6696856799971370507[62] = 1;
   out_6696856799971370507[63] = 0;
   out_6696856799971370507[64] = 0;
   out_6696856799971370507[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6784604416272540050) {
  H(in_vec, out_6784604416272540050);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2655675818042385017) {
  err_fun(nom_x, delta_x, out_2655675818042385017);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2963903028631488861) {
  inv_err_fun(nom_x, true_x, out_2963903028631488861);
}
void live_H_mod_fun(double *state, double *out_6140507083378850689) {
  H_mod_fun(state, out_6140507083378850689);
}
void live_f_fun(double *state, double dt, double *out_8342962912891581995) {
  f_fun(state,  dt, out_8342962912891581995);
}
void live_F_fun(double *state, double dt, double *out_1526442805071530398) {
  F_fun(state,  dt, out_1526442805071530398);
}
void live_h_4(double *state, double *unused, double *out_2670771569647076777) {
  h_4(state, unused, out_2670771569647076777);
}
void live_H_4(double *state, double *unused, double *out_4218719645024462601) {
  H_4(state, unused, out_4218719645024462601);
}
void live_h_9(double *state, double *unused, double *out_6675251998404262248) {
  h_9(state, unused, out_6675251998404262248);
}
void live_H_9(double *state, double *unused, double *out_3977529998394871956) {
  H_9(state, unused, out_3977529998394871956);
}
void live_h_10(double *state, double *unused, double *out_1276204232902478899) {
  h_10(state, unused, out_1276204232902478899);
}
void live_H_10(double *state, double *unused, double *out_6757950970174612806) {
  H_10(state, unused, out_6757950970174612806);
}
void live_h_12(double *state, double *unused, double *out_2978561226524827777) {
  h_12(state, unused, out_2978561226524827777);
}
void live_H_12(double *state, double *unused, double *out_800736763007499194) {
  H_12(state, unused, out_800736763007499194);
}
void live_h_31(double *state, double *unused, double *out_2413691193150815936) {
  h_31(state, unused, out_2413691193150815936);
}
void live_H_31(double *state, double *unused, double *out_3546299795332512903) {
  H_31(state, unused, out_3546299795332512903);
}
void live_h_32(double *state, double *unused, double *out_3243039148850874459) {
  h_32(state, unused, out_3243039148850874459);
}
void live_H_32(double *state, double *unused, double *out_4520284407358662164) {
  H_32(state, unused, out_4520284407358662164);
}
void live_h_13(double *state, double *unused, double *out_4786736807995769626) {
  h_13(state, unused, out_4786736807995769626);
}
void live_H_13(double *state, double *unused, double *out_6288316727689772411) {
  H_13(state, unused, out_6288316727689772411);
}
void live_h_14(double *state, double *unused, double *out_6675251998404262248) {
  h_14(state, unused, out_6675251998404262248);
}
void live_H_14(double *state, double *unused, double *out_3977529998394871956) {
  H_14(state, unused, out_3977529998394871956);
}
void live_h_33(double *state, double *unused, double *out_7896467299687702405) {
  h_33(state, unused, out_7896467299687702405);
}
void live_H_33(double *state, double *unused, double *out_6696856799971370507) {
  H_33(state, unused, out_6696856799971370507);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
