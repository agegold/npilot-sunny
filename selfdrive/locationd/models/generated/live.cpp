#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1072191033157158601) {
   out_1072191033157158601[0] = 0;
   out_1072191033157158601[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1072191033157158601[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1072191033157158601[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1072191033157158601[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1072191033157158601[5] = -sin(in_vec[1]);
   out_1072191033157158601[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1072191033157158601[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1072191033157158601[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1072191033157158601[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1072191033157158601[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1072191033157158601[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1072191033157158601[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1072191033157158601[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1072191033157158601[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1072191033157158601[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1072191033157158601[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1072191033157158601[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9153287392632638135) {
   out_9153287392632638135[0] = delta_x[0] + nom_x[0];
   out_9153287392632638135[1] = delta_x[1] + nom_x[1];
   out_9153287392632638135[2] = delta_x[2] + nom_x[2];
   out_9153287392632638135[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9153287392632638135[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9153287392632638135[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9153287392632638135[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9153287392632638135[7] = delta_x[6] + nom_x[7];
   out_9153287392632638135[8] = delta_x[7] + nom_x[8];
   out_9153287392632638135[9] = delta_x[8] + nom_x[9];
   out_9153287392632638135[10] = delta_x[9] + nom_x[10];
   out_9153287392632638135[11] = delta_x[10] + nom_x[11];
   out_9153287392632638135[12] = delta_x[11] + nom_x[12];
   out_9153287392632638135[13] = delta_x[12] + nom_x[13];
   out_9153287392632638135[14] = delta_x[13] + nom_x[14];
   out_9153287392632638135[15] = delta_x[14] + nom_x[15];
   out_9153287392632638135[16] = delta_x[15] + nom_x[16];
   out_9153287392632638135[17] = delta_x[16] + nom_x[17];
   out_9153287392632638135[18] = delta_x[17] + nom_x[18];
   out_9153287392632638135[19] = delta_x[18] + nom_x[19];
   out_9153287392632638135[20] = delta_x[19] + nom_x[20];
   out_9153287392632638135[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8767774856622703482) {
   out_8767774856622703482[0] = -nom_x[0] + true_x[0];
   out_8767774856622703482[1] = -nom_x[1] + true_x[1];
   out_8767774856622703482[2] = -nom_x[2] + true_x[2];
   out_8767774856622703482[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8767774856622703482[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8767774856622703482[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8767774856622703482[6] = -nom_x[7] + true_x[7];
   out_8767774856622703482[7] = -nom_x[8] + true_x[8];
   out_8767774856622703482[8] = -nom_x[9] + true_x[9];
   out_8767774856622703482[9] = -nom_x[10] + true_x[10];
   out_8767774856622703482[10] = -nom_x[11] + true_x[11];
   out_8767774856622703482[11] = -nom_x[12] + true_x[12];
   out_8767774856622703482[12] = -nom_x[13] + true_x[13];
   out_8767774856622703482[13] = -nom_x[14] + true_x[14];
   out_8767774856622703482[14] = -nom_x[15] + true_x[15];
   out_8767774856622703482[15] = -nom_x[16] + true_x[16];
   out_8767774856622703482[16] = -nom_x[17] + true_x[17];
   out_8767774856622703482[17] = -nom_x[18] + true_x[18];
   out_8767774856622703482[18] = -nom_x[19] + true_x[19];
   out_8767774856622703482[19] = -nom_x[20] + true_x[20];
   out_8767774856622703482[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1721134699022982220) {
   out_1721134699022982220[0] = 1.0;
   out_1721134699022982220[1] = 0;
   out_1721134699022982220[2] = 0;
   out_1721134699022982220[3] = 0;
   out_1721134699022982220[4] = 0;
   out_1721134699022982220[5] = 0;
   out_1721134699022982220[6] = 0;
   out_1721134699022982220[7] = 0;
   out_1721134699022982220[8] = 0;
   out_1721134699022982220[9] = 0;
   out_1721134699022982220[10] = 0;
   out_1721134699022982220[11] = 0;
   out_1721134699022982220[12] = 0;
   out_1721134699022982220[13] = 0;
   out_1721134699022982220[14] = 0;
   out_1721134699022982220[15] = 0;
   out_1721134699022982220[16] = 0;
   out_1721134699022982220[17] = 0;
   out_1721134699022982220[18] = 0;
   out_1721134699022982220[19] = 0;
   out_1721134699022982220[20] = 0;
   out_1721134699022982220[21] = 0;
   out_1721134699022982220[22] = 1.0;
   out_1721134699022982220[23] = 0;
   out_1721134699022982220[24] = 0;
   out_1721134699022982220[25] = 0;
   out_1721134699022982220[26] = 0;
   out_1721134699022982220[27] = 0;
   out_1721134699022982220[28] = 0;
   out_1721134699022982220[29] = 0;
   out_1721134699022982220[30] = 0;
   out_1721134699022982220[31] = 0;
   out_1721134699022982220[32] = 0;
   out_1721134699022982220[33] = 0;
   out_1721134699022982220[34] = 0;
   out_1721134699022982220[35] = 0;
   out_1721134699022982220[36] = 0;
   out_1721134699022982220[37] = 0;
   out_1721134699022982220[38] = 0;
   out_1721134699022982220[39] = 0;
   out_1721134699022982220[40] = 0;
   out_1721134699022982220[41] = 0;
   out_1721134699022982220[42] = 0;
   out_1721134699022982220[43] = 0;
   out_1721134699022982220[44] = 1.0;
   out_1721134699022982220[45] = 0;
   out_1721134699022982220[46] = 0;
   out_1721134699022982220[47] = 0;
   out_1721134699022982220[48] = 0;
   out_1721134699022982220[49] = 0;
   out_1721134699022982220[50] = 0;
   out_1721134699022982220[51] = 0;
   out_1721134699022982220[52] = 0;
   out_1721134699022982220[53] = 0;
   out_1721134699022982220[54] = 0;
   out_1721134699022982220[55] = 0;
   out_1721134699022982220[56] = 0;
   out_1721134699022982220[57] = 0;
   out_1721134699022982220[58] = 0;
   out_1721134699022982220[59] = 0;
   out_1721134699022982220[60] = 0;
   out_1721134699022982220[61] = 0;
   out_1721134699022982220[62] = 0;
   out_1721134699022982220[63] = 0;
   out_1721134699022982220[64] = 0;
   out_1721134699022982220[65] = 0;
   out_1721134699022982220[66] = -0.5*state[4];
   out_1721134699022982220[67] = -0.5*state[5];
   out_1721134699022982220[68] = -0.5*state[6];
   out_1721134699022982220[69] = 0;
   out_1721134699022982220[70] = 0;
   out_1721134699022982220[71] = 0;
   out_1721134699022982220[72] = 0;
   out_1721134699022982220[73] = 0;
   out_1721134699022982220[74] = 0;
   out_1721134699022982220[75] = 0;
   out_1721134699022982220[76] = 0;
   out_1721134699022982220[77] = 0;
   out_1721134699022982220[78] = 0;
   out_1721134699022982220[79] = 0;
   out_1721134699022982220[80] = 0;
   out_1721134699022982220[81] = 0;
   out_1721134699022982220[82] = 0;
   out_1721134699022982220[83] = 0;
   out_1721134699022982220[84] = 0;
   out_1721134699022982220[85] = 0;
   out_1721134699022982220[86] = 0;
   out_1721134699022982220[87] = 0.5*state[3];
   out_1721134699022982220[88] = 0.5*state[6];
   out_1721134699022982220[89] = -0.5*state[5];
   out_1721134699022982220[90] = 0;
   out_1721134699022982220[91] = 0;
   out_1721134699022982220[92] = 0;
   out_1721134699022982220[93] = 0;
   out_1721134699022982220[94] = 0;
   out_1721134699022982220[95] = 0;
   out_1721134699022982220[96] = 0;
   out_1721134699022982220[97] = 0;
   out_1721134699022982220[98] = 0;
   out_1721134699022982220[99] = 0;
   out_1721134699022982220[100] = 0;
   out_1721134699022982220[101] = 0;
   out_1721134699022982220[102] = 0;
   out_1721134699022982220[103] = 0;
   out_1721134699022982220[104] = 0;
   out_1721134699022982220[105] = 0;
   out_1721134699022982220[106] = 0;
   out_1721134699022982220[107] = 0;
   out_1721134699022982220[108] = -0.5*state[6];
   out_1721134699022982220[109] = 0.5*state[3];
   out_1721134699022982220[110] = 0.5*state[4];
   out_1721134699022982220[111] = 0;
   out_1721134699022982220[112] = 0;
   out_1721134699022982220[113] = 0;
   out_1721134699022982220[114] = 0;
   out_1721134699022982220[115] = 0;
   out_1721134699022982220[116] = 0;
   out_1721134699022982220[117] = 0;
   out_1721134699022982220[118] = 0;
   out_1721134699022982220[119] = 0;
   out_1721134699022982220[120] = 0;
   out_1721134699022982220[121] = 0;
   out_1721134699022982220[122] = 0;
   out_1721134699022982220[123] = 0;
   out_1721134699022982220[124] = 0;
   out_1721134699022982220[125] = 0;
   out_1721134699022982220[126] = 0;
   out_1721134699022982220[127] = 0;
   out_1721134699022982220[128] = 0;
   out_1721134699022982220[129] = 0.5*state[5];
   out_1721134699022982220[130] = -0.5*state[4];
   out_1721134699022982220[131] = 0.5*state[3];
   out_1721134699022982220[132] = 0;
   out_1721134699022982220[133] = 0;
   out_1721134699022982220[134] = 0;
   out_1721134699022982220[135] = 0;
   out_1721134699022982220[136] = 0;
   out_1721134699022982220[137] = 0;
   out_1721134699022982220[138] = 0;
   out_1721134699022982220[139] = 0;
   out_1721134699022982220[140] = 0;
   out_1721134699022982220[141] = 0;
   out_1721134699022982220[142] = 0;
   out_1721134699022982220[143] = 0;
   out_1721134699022982220[144] = 0;
   out_1721134699022982220[145] = 0;
   out_1721134699022982220[146] = 0;
   out_1721134699022982220[147] = 0;
   out_1721134699022982220[148] = 0;
   out_1721134699022982220[149] = 0;
   out_1721134699022982220[150] = 0;
   out_1721134699022982220[151] = 0;
   out_1721134699022982220[152] = 0;
   out_1721134699022982220[153] = 1.0;
   out_1721134699022982220[154] = 0;
   out_1721134699022982220[155] = 0;
   out_1721134699022982220[156] = 0;
   out_1721134699022982220[157] = 0;
   out_1721134699022982220[158] = 0;
   out_1721134699022982220[159] = 0;
   out_1721134699022982220[160] = 0;
   out_1721134699022982220[161] = 0;
   out_1721134699022982220[162] = 0;
   out_1721134699022982220[163] = 0;
   out_1721134699022982220[164] = 0;
   out_1721134699022982220[165] = 0;
   out_1721134699022982220[166] = 0;
   out_1721134699022982220[167] = 0;
   out_1721134699022982220[168] = 0;
   out_1721134699022982220[169] = 0;
   out_1721134699022982220[170] = 0;
   out_1721134699022982220[171] = 0;
   out_1721134699022982220[172] = 0;
   out_1721134699022982220[173] = 0;
   out_1721134699022982220[174] = 0;
   out_1721134699022982220[175] = 1.0;
   out_1721134699022982220[176] = 0;
   out_1721134699022982220[177] = 0;
   out_1721134699022982220[178] = 0;
   out_1721134699022982220[179] = 0;
   out_1721134699022982220[180] = 0;
   out_1721134699022982220[181] = 0;
   out_1721134699022982220[182] = 0;
   out_1721134699022982220[183] = 0;
   out_1721134699022982220[184] = 0;
   out_1721134699022982220[185] = 0;
   out_1721134699022982220[186] = 0;
   out_1721134699022982220[187] = 0;
   out_1721134699022982220[188] = 0;
   out_1721134699022982220[189] = 0;
   out_1721134699022982220[190] = 0;
   out_1721134699022982220[191] = 0;
   out_1721134699022982220[192] = 0;
   out_1721134699022982220[193] = 0;
   out_1721134699022982220[194] = 0;
   out_1721134699022982220[195] = 0;
   out_1721134699022982220[196] = 0;
   out_1721134699022982220[197] = 1.0;
   out_1721134699022982220[198] = 0;
   out_1721134699022982220[199] = 0;
   out_1721134699022982220[200] = 0;
   out_1721134699022982220[201] = 0;
   out_1721134699022982220[202] = 0;
   out_1721134699022982220[203] = 0;
   out_1721134699022982220[204] = 0;
   out_1721134699022982220[205] = 0;
   out_1721134699022982220[206] = 0;
   out_1721134699022982220[207] = 0;
   out_1721134699022982220[208] = 0;
   out_1721134699022982220[209] = 0;
   out_1721134699022982220[210] = 0;
   out_1721134699022982220[211] = 0;
   out_1721134699022982220[212] = 0;
   out_1721134699022982220[213] = 0;
   out_1721134699022982220[214] = 0;
   out_1721134699022982220[215] = 0;
   out_1721134699022982220[216] = 0;
   out_1721134699022982220[217] = 0;
   out_1721134699022982220[218] = 0;
   out_1721134699022982220[219] = 1.0;
   out_1721134699022982220[220] = 0;
   out_1721134699022982220[221] = 0;
   out_1721134699022982220[222] = 0;
   out_1721134699022982220[223] = 0;
   out_1721134699022982220[224] = 0;
   out_1721134699022982220[225] = 0;
   out_1721134699022982220[226] = 0;
   out_1721134699022982220[227] = 0;
   out_1721134699022982220[228] = 0;
   out_1721134699022982220[229] = 0;
   out_1721134699022982220[230] = 0;
   out_1721134699022982220[231] = 0;
   out_1721134699022982220[232] = 0;
   out_1721134699022982220[233] = 0;
   out_1721134699022982220[234] = 0;
   out_1721134699022982220[235] = 0;
   out_1721134699022982220[236] = 0;
   out_1721134699022982220[237] = 0;
   out_1721134699022982220[238] = 0;
   out_1721134699022982220[239] = 0;
   out_1721134699022982220[240] = 0;
   out_1721134699022982220[241] = 1.0;
   out_1721134699022982220[242] = 0;
   out_1721134699022982220[243] = 0;
   out_1721134699022982220[244] = 0;
   out_1721134699022982220[245] = 0;
   out_1721134699022982220[246] = 0;
   out_1721134699022982220[247] = 0;
   out_1721134699022982220[248] = 0;
   out_1721134699022982220[249] = 0;
   out_1721134699022982220[250] = 0;
   out_1721134699022982220[251] = 0;
   out_1721134699022982220[252] = 0;
   out_1721134699022982220[253] = 0;
   out_1721134699022982220[254] = 0;
   out_1721134699022982220[255] = 0;
   out_1721134699022982220[256] = 0;
   out_1721134699022982220[257] = 0;
   out_1721134699022982220[258] = 0;
   out_1721134699022982220[259] = 0;
   out_1721134699022982220[260] = 0;
   out_1721134699022982220[261] = 0;
   out_1721134699022982220[262] = 0;
   out_1721134699022982220[263] = 1.0;
   out_1721134699022982220[264] = 0;
   out_1721134699022982220[265] = 0;
   out_1721134699022982220[266] = 0;
   out_1721134699022982220[267] = 0;
   out_1721134699022982220[268] = 0;
   out_1721134699022982220[269] = 0;
   out_1721134699022982220[270] = 0;
   out_1721134699022982220[271] = 0;
   out_1721134699022982220[272] = 0;
   out_1721134699022982220[273] = 0;
   out_1721134699022982220[274] = 0;
   out_1721134699022982220[275] = 0;
   out_1721134699022982220[276] = 0;
   out_1721134699022982220[277] = 0;
   out_1721134699022982220[278] = 0;
   out_1721134699022982220[279] = 0;
   out_1721134699022982220[280] = 0;
   out_1721134699022982220[281] = 0;
   out_1721134699022982220[282] = 0;
   out_1721134699022982220[283] = 0;
   out_1721134699022982220[284] = 0;
   out_1721134699022982220[285] = 1.0;
   out_1721134699022982220[286] = 0;
   out_1721134699022982220[287] = 0;
   out_1721134699022982220[288] = 0;
   out_1721134699022982220[289] = 0;
   out_1721134699022982220[290] = 0;
   out_1721134699022982220[291] = 0;
   out_1721134699022982220[292] = 0;
   out_1721134699022982220[293] = 0;
   out_1721134699022982220[294] = 0;
   out_1721134699022982220[295] = 0;
   out_1721134699022982220[296] = 0;
   out_1721134699022982220[297] = 0;
   out_1721134699022982220[298] = 0;
   out_1721134699022982220[299] = 0;
   out_1721134699022982220[300] = 0;
   out_1721134699022982220[301] = 0;
   out_1721134699022982220[302] = 0;
   out_1721134699022982220[303] = 0;
   out_1721134699022982220[304] = 0;
   out_1721134699022982220[305] = 0;
   out_1721134699022982220[306] = 0;
   out_1721134699022982220[307] = 1.0;
   out_1721134699022982220[308] = 0;
   out_1721134699022982220[309] = 0;
   out_1721134699022982220[310] = 0;
   out_1721134699022982220[311] = 0;
   out_1721134699022982220[312] = 0;
   out_1721134699022982220[313] = 0;
   out_1721134699022982220[314] = 0;
   out_1721134699022982220[315] = 0;
   out_1721134699022982220[316] = 0;
   out_1721134699022982220[317] = 0;
   out_1721134699022982220[318] = 0;
   out_1721134699022982220[319] = 0;
   out_1721134699022982220[320] = 0;
   out_1721134699022982220[321] = 0;
   out_1721134699022982220[322] = 0;
   out_1721134699022982220[323] = 0;
   out_1721134699022982220[324] = 0;
   out_1721134699022982220[325] = 0;
   out_1721134699022982220[326] = 0;
   out_1721134699022982220[327] = 0;
   out_1721134699022982220[328] = 0;
   out_1721134699022982220[329] = 1.0;
   out_1721134699022982220[330] = 0;
   out_1721134699022982220[331] = 0;
   out_1721134699022982220[332] = 0;
   out_1721134699022982220[333] = 0;
   out_1721134699022982220[334] = 0;
   out_1721134699022982220[335] = 0;
   out_1721134699022982220[336] = 0;
   out_1721134699022982220[337] = 0;
   out_1721134699022982220[338] = 0;
   out_1721134699022982220[339] = 0;
   out_1721134699022982220[340] = 0;
   out_1721134699022982220[341] = 0;
   out_1721134699022982220[342] = 0;
   out_1721134699022982220[343] = 0;
   out_1721134699022982220[344] = 0;
   out_1721134699022982220[345] = 0;
   out_1721134699022982220[346] = 0;
   out_1721134699022982220[347] = 0;
   out_1721134699022982220[348] = 0;
   out_1721134699022982220[349] = 0;
   out_1721134699022982220[350] = 0;
   out_1721134699022982220[351] = 1.0;
   out_1721134699022982220[352] = 0;
   out_1721134699022982220[353] = 0;
   out_1721134699022982220[354] = 0;
   out_1721134699022982220[355] = 0;
   out_1721134699022982220[356] = 0;
   out_1721134699022982220[357] = 0;
   out_1721134699022982220[358] = 0;
   out_1721134699022982220[359] = 0;
   out_1721134699022982220[360] = 0;
   out_1721134699022982220[361] = 0;
   out_1721134699022982220[362] = 0;
   out_1721134699022982220[363] = 0;
   out_1721134699022982220[364] = 0;
   out_1721134699022982220[365] = 0;
   out_1721134699022982220[366] = 0;
   out_1721134699022982220[367] = 0;
   out_1721134699022982220[368] = 0;
   out_1721134699022982220[369] = 0;
   out_1721134699022982220[370] = 0;
   out_1721134699022982220[371] = 0;
   out_1721134699022982220[372] = 0;
   out_1721134699022982220[373] = 1.0;
   out_1721134699022982220[374] = 0;
   out_1721134699022982220[375] = 0;
   out_1721134699022982220[376] = 0;
   out_1721134699022982220[377] = 0;
   out_1721134699022982220[378] = 0;
   out_1721134699022982220[379] = 0;
   out_1721134699022982220[380] = 0;
   out_1721134699022982220[381] = 0;
   out_1721134699022982220[382] = 0;
   out_1721134699022982220[383] = 0;
   out_1721134699022982220[384] = 0;
   out_1721134699022982220[385] = 0;
   out_1721134699022982220[386] = 0;
   out_1721134699022982220[387] = 0;
   out_1721134699022982220[388] = 0;
   out_1721134699022982220[389] = 0;
   out_1721134699022982220[390] = 0;
   out_1721134699022982220[391] = 0;
   out_1721134699022982220[392] = 0;
   out_1721134699022982220[393] = 0;
   out_1721134699022982220[394] = 0;
   out_1721134699022982220[395] = 1.0;
   out_1721134699022982220[396] = 0;
   out_1721134699022982220[397] = 0;
   out_1721134699022982220[398] = 0;
   out_1721134699022982220[399] = 0;
   out_1721134699022982220[400] = 0;
   out_1721134699022982220[401] = 0;
   out_1721134699022982220[402] = 0;
   out_1721134699022982220[403] = 0;
   out_1721134699022982220[404] = 0;
   out_1721134699022982220[405] = 0;
   out_1721134699022982220[406] = 0;
   out_1721134699022982220[407] = 0;
   out_1721134699022982220[408] = 0;
   out_1721134699022982220[409] = 0;
   out_1721134699022982220[410] = 0;
   out_1721134699022982220[411] = 0;
   out_1721134699022982220[412] = 0;
   out_1721134699022982220[413] = 0;
   out_1721134699022982220[414] = 0;
   out_1721134699022982220[415] = 0;
   out_1721134699022982220[416] = 0;
   out_1721134699022982220[417] = 1.0;
   out_1721134699022982220[418] = 0;
   out_1721134699022982220[419] = 0;
   out_1721134699022982220[420] = 0;
   out_1721134699022982220[421] = 0;
   out_1721134699022982220[422] = 0;
   out_1721134699022982220[423] = 0;
   out_1721134699022982220[424] = 0;
   out_1721134699022982220[425] = 0;
   out_1721134699022982220[426] = 0;
   out_1721134699022982220[427] = 0;
   out_1721134699022982220[428] = 0;
   out_1721134699022982220[429] = 0;
   out_1721134699022982220[430] = 0;
   out_1721134699022982220[431] = 0;
   out_1721134699022982220[432] = 0;
   out_1721134699022982220[433] = 0;
   out_1721134699022982220[434] = 0;
   out_1721134699022982220[435] = 0;
   out_1721134699022982220[436] = 0;
   out_1721134699022982220[437] = 0;
   out_1721134699022982220[438] = 0;
   out_1721134699022982220[439] = 1.0;
   out_1721134699022982220[440] = 0;
   out_1721134699022982220[441] = 0;
   out_1721134699022982220[442] = 0;
   out_1721134699022982220[443] = 0;
   out_1721134699022982220[444] = 0;
   out_1721134699022982220[445] = 0;
   out_1721134699022982220[446] = 0;
   out_1721134699022982220[447] = 0;
   out_1721134699022982220[448] = 0;
   out_1721134699022982220[449] = 0;
   out_1721134699022982220[450] = 0;
   out_1721134699022982220[451] = 0;
   out_1721134699022982220[452] = 0;
   out_1721134699022982220[453] = 0;
   out_1721134699022982220[454] = 0;
   out_1721134699022982220[455] = 0;
   out_1721134699022982220[456] = 0;
   out_1721134699022982220[457] = 0;
   out_1721134699022982220[458] = 0;
   out_1721134699022982220[459] = 0;
   out_1721134699022982220[460] = 0;
   out_1721134699022982220[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2791114234699295272) {
   out_2791114234699295272[0] = dt*state[7] + state[0];
   out_2791114234699295272[1] = dt*state[8] + state[1];
   out_2791114234699295272[2] = dt*state[9] + state[2];
   out_2791114234699295272[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2791114234699295272[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2791114234699295272[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2791114234699295272[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2791114234699295272[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2791114234699295272[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2791114234699295272[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2791114234699295272[10] = state[10];
   out_2791114234699295272[11] = state[11];
   out_2791114234699295272[12] = state[12];
   out_2791114234699295272[13] = state[13];
   out_2791114234699295272[14] = state[14];
   out_2791114234699295272[15] = state[15];
   out_2791114234699295272[16] = state[16];
   out_2791114234699295272[17] = state[17];
   out_2791114234699295272[18] = state[18];
   out_2791114234699295272[19] = state[19];
   out_2791114234699295272[20] = state[20];
   out_2791114234699295272[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3238609712970279026) {
   out_3238609712970279026[0] = 1;
   out_3238609712970279026[1] = 0;
   out_3238609712970279026[2] = 0;
   out_3238609712970279026[3] = 0;
   out_3238609712970279026[4] = 0;
   out_3238609712970279026[5] = 0;
   out_3238609712970279026[6] = dt;
   out_3238609712970279026[7] = 0;
   out_3238609712970279026[8] = 0;
   out_3238609712970279026[9] = 0;
   out_3238609712970279026[10] = 0;
   out_3238609712970279026[11] = 0;
   out_3238609712970279026[12] = 0;
   out_3238609712970279026[13] = 0;
   out_3238609712970279026[14] = 0;
   out_3238609712970279026[15] = 0;
   out_3238609712970279026[16] = 0;
   out_3238609712970279026[17] = 0;
   out_3238609712970279026[18] = 0;
   out_3238609712970279026[19] = 0;
   out_3238609712970279026[20] = 0;
   out_3238609712970279026[21] = 0;
   out_3238609712970279026[22] = 1;
   out_3238609712970279026[23] = 0;
   out_3238609712970279026[24] = 0;
   out_3238609712970279026[25] = 0;
   out_3238609712970279026[26] = 0;
   out_3238609712970279026[27] = 0;
   out_3238609712970279026[28] = dt;
   out_3238609712970279026[29] = 0;
   out_3238609712970279026[30] = 0;
   out_3238609712970279026[31] = 0;
   out_3238609712970279026[32] = 0;
   out_3238609712970279026[33] = 0;
   out_3238609712970279026[34] = 0;
   out_3238609712970279026[35] = 0;
   out_3238609712970279026[36] = 0;
   out_3238609712970279026[37] = 0;
   out_3238609712970279026[38] = 0;
   out_3238609712970279026[39] = 0;
   out_3238609712970279026[40] = 0;
   out_3238609712970279026[41] = 0;
   out_3238609712970279026[42] = 0;
   out_3238609712970279026[43] = 0;
   out_3238609712970279026[44] = 1;
   out_3238609712970279026[45] = 0;
   out_3238609712970279026[46] = 0;
   out_3238609712970279026[47] = 0;
   out_3238609712970279026[48] = 0;
   out_3238609712970279026[49] = 0;
   out_3238609712970279026[50] = dt;
   out_3238609712970279026[51] = 0;
   out_3238609712970279026[52] = 0;
   out_3238609712970279026[53] = 0;
   out_3238609712970279026[54] = 0;
   out_3238609712970279026[55] = 0;
   out_3238609712970279026[56] = 0;
   out_3238609712970279026[57] = 0;
   out_3238609712970279026[58] = 0;
   out_3238609712970279026[59] = 0;
   out_3238609712970279026[60] = 0;
   out_3238609712970279026[61] = 0;
   out_3238609712970279026[62] = 0;
   out_3238609712970279026[63] = 0;
   out_3238609712970279026[64] = 0;
   out_3238609712970279026[65] = 0;
   out_3238609712970279026[66] = 1;
   out_3238609712970279026[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3238609712970279026[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3238609712970279026[69] = 0;
   out_3238609712970279026[70] = 0;
   out_3238609712970279026[71] = 0;
   out_3238609712970279026[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3238609712970279026[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3238609712970279026[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3238609712970279026[75] = 0;
   out_3238609712970279026[76] = 0;
   out_3238609712970279026[77] = 0;
   out_3238609712970279026[78] = 0;
   out_3238609712970279026[79] = 0;
   out_3238609712970279026[80] = 0;
   out_3238609712970279026[81] = 0;
   out_3238609712970279026[82] = 0;
   out_3238609712970279026[83] = 0;
   out_3238609712970279026[84] = 0;
   out_3238609712970279026[85] = 0;
   out_3238609712970279026[86] = 0;
   out_3238609712970279026[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3238609712970279026[88] = 1;
   out_3238609712970279026[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3238609712970279026[90] = 0;
   out_3238609712970279026[91] = 0;
   out_3238609712970279026[92] = 0;
   out_3238609712970279026[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3238609712970279026[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3238609712970279026[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3238609712970279026[96] = 0;
   out_3238609712970279026[97] = 0;
   out_3238609712970279026[98] = 0;
   out_3238609712970279026[99] = 0;
   out_3238609712970279026[100] = 0;
   out_3238609712970279026[101] = 0;
   out_3238609712970279026[102] = 0;
   out_3238609712970279026[103] = 0;
   out_3238609712970279026[104] = 0;
   out_3238609712970279026[105] = 0;
   out_3238609712970279026[106] = 0;
   out_3238609712970279026[107] = 0;
   out_3238609712970279026[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3238609712970279026[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3238609712970279026[110] = 1;
   out_3238609712970279026[111] = 0;
   out_3238609712970279026[112] = 0;
   out_3238609712970279026[113] = 0;
   out_3238609712970279026[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3238609712970279026[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3238609712970279026[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3238609712970279026[117] = 0;
   out_3238609712970279026[118] = 0;
   out_3238609712970279026[119] = 0;
   out_3238609712970279026[120] = 0;
   out_3238609712970279026[121] = 0;
   out_3238609712970279026[122] = 0;
   out_3238609712970279026[123] = 0;
   out_3238609712970279026[124] = 0;
   out_3238609712970279026[125] = 0;
   out_3238609712970279026[126] = 0;
   out_3238609712970279026[127] = 0;
   out_3238609712970279026[128] = 0;
   out_3238609712970279026[129] = 0;
   out_3238609712970279026[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3238609712970279026[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3238609712970279026[132] = 1;
   out_3238609712970279026[133] = 0;
   out_3238609712970279026[134] = 0;
   out_3238609712970279026[135] = 0;
   out_3238609712970279026[136] = 0;
   out_3238609712970279026[137] = 0;
   out_3238609712970279026[138] = 0;
   out_3238609712970279026[139] = 0;
   out_3238609712970279026[140] = 0;
   out_3238609712970279026[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3238609712970279026[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3238609712970279026[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3238609712970279026[144] = 0;
   out_3238609712970279026[145] = 0;
   out_3238609712970279026[146] = 0;
   out_3238609712970279026[147] = 0;
   out_3238609712970279026[148] = 0;
   out_3238609712970279026[149] = 0;
   out_3238609712970279026[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3238609712970279026[151] = 0;
   out_3238609712970279026[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3238609712970279026[153] = 0;
   out_3238609712970279026[154] = 1;
   out_3238609712970279026[155] = 0;
   out_3238609712970279026[156] = 0;
   out_3238609712970279026[157] = 0;
   out_3238609712970279026[158] = 0;
   out_3238609712970279026[159] = 0;
   out_3238609712970279026[160] = 0;
   out_3238609712970279026[161] = 0;
   out_3238609712970279026[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3238609712970279026[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3238609712970279026[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3238609712970279026[165] = 0;
   out_3238609712970279026[166] = 0;
   out_3238609712970279026[167] = 0;
   out_3238609712970279026[168] = 0;
   out_3238609712970279026[169] = 0;
   out_3238609712970279026[170] = 0;
   out_3238609712970279026[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3238609712970279026[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3238609712970279026[173] = 0;
   out_3238609712970279026[174] = 0;
   out_3238609712970279026[175] = 0;
   out_3238609712970279026[176] = 1;
   out_3238609712970279026[177] = 0;
   out_3238609712970279026[178] = 0;
   out_3238609712970279026[179] = 0;
   out_3238609712970279026[180] = 0;
   out_3238609712970279026[181] = 0;
   out_3238609712970279026[182] = 0;
   out_3238609712970279026[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3238609712970279026[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3238609712970279026[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3238609712970279026[186] = 0;
   out_3238609712970279026[187] = 0;
   out_3238609712970279026[188] = 0;
   out_3238609712970279026[189] = 0;
   out_3238609712970279026[190] = 0;
   out_3238609712970279026[191] = 0;
   out_3238609712970279026[192] = 0;
   out_3238609712970279026[193] = 0;
   out_3238609712970279026[194] = 0;
   out_3238609712970279026[195] = 0;
   out_3238609712970279026[196] = 0;
   out_3238609712970279026[197] = 0;
   out_3238609712970279026[198] = 1;
   out_3238609712970279026[199] = 0;
   out_3238609712970279026[200] = 0;
   out_3238609712970279026[201] = 0;
   out_3238609712970279026[202] = 0;
   out_3238609712970279026[203] = 0;
   out_3238609712970279026[204] = 0;
   out_3238609712970279026[205] = 0;
   out_3238609712970279026[206] = 0;
   out_3238609712970279026[207] = 0;
   out_3238609712970279026[208] = 0;
   out_3238609712970279026[209] = 0;
   out_3238609712970279026[210] = 0;
   out_3238609712970279026[211] = 0;
   out_3238609712970279026[212] = 0;
   out_3238609712970279026[213] = 0;
   out_3238609712970279026[214] = 0;
   out_3238609712970279026[215] = 0;
   out_3238609712970279026[216] = 0;
   out_3238609712970279026[217] = 0;
   out_3238609712970279026[218] = 0;
   out_3238609712970279026[219] = 0;
   out_3238609712970279026[220] = 1;
   out_3238609712970279026[221] = 0;
   out_3238609712970279026[222] = 0;
   out_3238609712970279026[223] = 0;
   out_3238609712970279026[224] = 0;
   out_3238609712970279026[225] = 0;
   out_3238609712970279026[226] = 0;
   out_3238609712970279026[227] = 0;
   out_3238609712970279026[228] = 0;
   out_3238609712970279026[229] = 0;
   out_3238609712970279026[230] = 0;
   out_3238609712970279026[231] = 0;
   out_3238609712970279026[232] = 0;
   out_3238609712970279026[233] = 0;
   out_3238609712970279026[234] = 0;
   out_3238609712970279026[235] = 0;
   out_3238609712970279026[236] = 0;
   out_3238609712970279026[237] = 0;
   out_3238609712970279026[238] = 0;
   out_3238609712970279026[239] = 0;
   out_3238609712970279026[240] = 0;
   out_3238609712970279026[241] = 0;
   out_3238609712970279026[242] = 1;
   out_3238609712970279026[243] = 0;
   out_3238609712970279026[244] = 0;
   out_3238609712970279026[245] = 0;
   out_3238609712970279026[246] = 0;
   out_3238609712970279026[247] = 0;
   out_3238609712970279026[248] = 0;
   out_3238609712970279026[249] = 0;
   out_3238609712970279026[250] = 0;
   out_3238609712970279026[251] = 0;
   out_3238609712970279026[252] = 0;
   out_3238609712970279026[253] = 0;
   out_3238609712970279026[254] = 0;
   out_3238609712970279026[255] = 0;
   out_3238609712970279026[256] = 0;
   out_3238609712970279026[257] = 0;
   out_3238609712970279026[258] = 0;
   out_3238609712970279026[259] = 0;
   out_3238609712970279026[260] = 0;
   out_3238609712970279026[261] = 0;
   out_3238609712970279026[262] = 0;
   out_3238609712970279026[263] = 0;
   out_3238609712970279026[264] = 1;
   out_3238609712970279026[265] = 0;
   out_3238609712970279026[266] = 0;
   out_3238609712970279026[267] = 0;
   out_3238609712970279026[268] = 0;
   out_3238609712970279026[269] = 0;
   out_3238609712970279026[270] = 0;
   out_3238609712970279026[271] = 0;
   out_3238609712970279026[272] = 0;
   out_3238609712970279026[273] = 0;
   out_3238609712970279026[274] = 0;
   out_3238609712970279026[275] = 0;
   out_3238609712970279026[276] = 0;
   out_3238609712970279026[277] = 0;
   out_3238609712970279026[278] = 0;
   out_3238609712970279026[279] = 0;
   out_3238609712970279026[280] = 0;
   out_3238609712970279026[281] = 0;
   out_3238609712970279026[282] = 0;
   out_3238609712970279026[283] = 0;
   out_3238609712970279026[284] = 0;
   out_3238609712970279026[285] = 0;
   out_3238609712970279026[286] = 1;
   out_3238609712970279026[287] = 0;
   out_3238609712970279026[288] = 0;
   out_3238609712970279026[289] = 0;
   out_3238609712970279026[290] = 0;
   out_3238609712970279026[291] = 0;
   out_3238609712970279026[292] = 0;
   out_3238609712970279026[293] = 0;
   out_3238609712970279026[294] = 0;
   out_3238609712970279026[295] = 0;
   out_3238609712970279026[296] = 0;
   out_3238609712970279026[297] = 0;
   out_3238609712970279026[298] = 0;
   out_3238609712970279026[299] = 0;
   out_3238609712970279026[300] = 0;
   out_3238609712970279026[301] = 0;
   out_3238609712970279026[302] = 0;
   out_3238609712970279026[303] = 0;
   out_3238609712970279026[304] = 0;
   out_3238609712970279026[305] = 0;
   out_3238609712970279026[306] = 0;
   out_3238609712970279026[307] = 0;
   out_3238609712970279026[308] = 1;
   out_3238609712970279026[309] = 0;
   out_3238609712970279026[310] = 0;
   out_3238609712970279026[311] = 0;
   out_3238609712970279026[312] = 0;
   out_3238609712970279026[313] = 0;
   out_3238609712970279026[314] = 0;
   out_3238609712970279026[315] = 0;
   out_3238609712970279026[316] = 0;
   out_3238609712970279026[317] = 0;
   out_3238609712970279026[318] = 0;
   out_3238609712970279026[319] = 0;
   out_3238609712970279026[320] = 0;
   out_3238609712970279026[321] = 0;
   out_3238609712970279026[322] = 0;
   out_3238609712970279026[323] = 0;
   out_3238609712970279026[324] = 0;
   out_3238609712970279026[325] = 0;
   out_3238609712970279026[326] = 0;
   out_3238609712970279026[327] = 0;
   out_3238609712970279026[328] = 0;
   out_3238609712970279026[329] = 0;
   out_3238609712970279026[330] = 1;
   out_3238609712970279026[331] = 0;
   out_3238609712970279026[332] = 0;
   out_3238609712970279026[333] = 0;
   out_3238609712970279026[334] = 0;
   out_3238609712970279026[335] = 0;
   out_3238609712970279026[336] = 0;
   out_3238609712970279026[337] = 0;
   out_3238609712970279026[338] = 0;
   out_3238609712970279026[339] = 0;
   out_3238609712970279026[340] = 0;
   out_3238609712970279026[341] = 0;
   out_3238609712970279026[342] = 0;
   out_3238609712970279026[343] = 0;
   out_3238609712970279026[344] = 0;
   out_3238609712970279026[345] = 0;
   out_3238609712970279026[346] = 0;
   out_3238609712970279026[347] = 0;
   out_3238609712970279026[348] = 0;
   out_3238609712970279026[349] = 0;
   out_3238609712970279026[350] = 0;
   out_3238609712970279026[351] = 0;
   out_3238609712970279026[352] = 1;
   out_3238609712970279026[353] = 0;
   out_3238609712970279026[354] = 0;
   out_3238609712970279026[355] = 0;
   out_3238609712970279026[356] = 0;
   out_3238609712970279026[357] = 0;
   out_3238609712970279026[358] = 0;
   out_3238609712970279026[359] = 0;
   out_3238609712970279026[360] = 0;
   out_3238609712970279026[361] = 0;
   out_3238609712970279026[362] = 0;
   out_3238609712970279026[363] = 0;
   out_3238609712970279026[364] = 0;
   out_3238609712970279026[365] = 0;
   out_3238609712970279026[366] = 0;
   out_3238609712970279026[367] = 0;
   out_3238609712970279026[368] = 0;
   out_3238609712970279026[369] = 0;
   out_3238609712970279026[370] = 0;
   out_3238609712970279026[371] = 0;
   out_3238609712970279026[372] = 0;
   out_3238609712970279026[373] = 0;
   out_3238609712970279026[374] = 1;
   out_3238609712970279026[375] = 0;
   out_3238609712970279026[376] = 0;
   out_3238609712970279026[377] = 0;
   out_3238609712970279026[378] = 0;
   out_3238609712970279026[379] = 0;
   out_3238609712970279026[380] = 0;
   out_3238609712970279026[381] = 0;
   out_3238609712970279026[382] = 0;
   out_3238609712970279026[383] = 0;
   out_3238609712970279026[384] = 0;
   out_3238609712970279026[385] = 0;
   out_3238609712970279026[386] = 0;
   out_3238609712970279026[387] = 0;
   out_3238609712970279026[388] = 0;
   out_3238609712970279026[389] = 0;
   out_3238609712970279026[390] = 0;
   out_3238609712970279026[391] = 0;
   out_3238609712970279026[392] = 0;
   out_3238609712970279026[393] = 0;
   out_3238609712970279026[394] = 0;
   out_3238609712970279026[395] = 0;
   out_3238609712970279026[396] = 1;
   out_3238609712970279026[397] = 0;
   out_3238609712970279026[398] = 0;
   out_3238609712970279026[399] = 0;
   out_3238609712970279026[400] = 0;
   out_3238609712970279026[401] = 0;
   out_3238609712970279026[402] = 0;
   out_3238609712970279026[403] = 0;
   out_3238609712970279026[404] = 0;
   out_3238609712970279026[405] = 0;
   out_3238609712970279026[406] = 0;
   out_3238609712970279026[407] = 0;
   out_3238609712970279026[408] = 0;
   out_3238609712970279026[409] = 0;
   out_3238609712970279026[410] = 0;
   out_3238609712970279026[411] = 0;
   out_3238609712970279026[412] = 0;
   out_3238609712970279026[413] = 0;
   out_3238609712970279026[414] = 0;
   out_3238609712970279026[415] = 0;
   out_3238609712970279026[416] = 0;
   out_3238609712970279026[417] = 0;
   out_3238609712970279026[418] = 1;
   out_3238609712970279026[419] = 0;
   out_3238609712970279026[420] = 0;
   out_3238609712970279026[421] = 0;
   out_3238609712970279026[422] = 0;
   out_3238609712970279026[423] = 0;
   out_3238609712970279026[424] = 0;
   out_3238609712970279026[425] = 0;
   out_3238609712970279026[426] = 0;
   out_3238609712970279026[427] = 0;
   out_3238609712970279026[428] = 0;
   out_3238609712970279026[429] = 0;
   out_3238609712970279026[430] = 0;
   out_3238609712970279026[431] = 0;
   out_3238609712970279026[432] = 0;
   out_3238609712970279026[433] = 0;
   out_3238609712970279026[434] = 0;
   out_3238609712970279026[435] = 0;
   out_3238609712970279026[436] = 0;
   out_3238609712970279026[437] = 0;
   out_3238609712970279026[438] = 0;
   out_3238609712970279026[439] = 0;
   out_3238609712970279026[440] = 1;
}
void h_4(double *state, double *unused, double *out_448328737891450255) {
   out_448328737891450255[0] = state[10] + state[13];
   out_448328737891450255[1] = state[11] + state[14];
   out_448328737891450255[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2486283194390190191) {
   out_2486283194390190191[0] = 0;
   out_2486283194390190191[1] = 0;
   out_2486283194390190191[2] = 0;
   out_2486283194390190191[3] = 0;
   out_2486283194390190191[4] = 0;
   out_2486283194390190191[5] = 0;
   out_2486283194390190191[6] = 0;
   out_2486283194390190191[7] = 0;
   out_2486283194390190191[8] = 0;
   out_2486283194390190191[9] = 0;
   out_2486283194390190191[10] = 1;
   out_2486283194390190191[11] = 0;
   out_2486283194390190191[12] = 0;
   out_2486283194390190191[13] = 1;
   out_2486283194390190191[14] = 0;
   out_2486283194390190191[15] = 0;
   out_2486283194390190191[16] = 0;
   out_2486283194390190191[17] = 0;
   out_2486283194390190191[18] = 0;
   out_2486283194390190191[19] = 0;
   out_2486283194390190191[20] = 0;
   out_2486283194390190191[21] = 0;
   out_2486283194390190191[22] = 0;
   out_2486283194390190191[23] = 0;
   out_2486283194390190191[24] = 0;
   out_2486283194390190191[25] = 0;
   out_2486283194390190191[26] = 0;
   out_2486283194390190191[27] = 0;
   out_2486283194390190191[28] = 0;
   out_2486283194390190191[29] = 0;
   out_2486283194390190191[30] = 0;
   out_2486283194390190191[31] = 0;
   out_2486283194390190191[32] = 0;
   out_2486283194390190191[33] = 1;
   out_2486283194390190191[34] = 0;
   out_2486283194390190191[35] = 0;
   out_2486283194390190191[36] = 1;
   out_2486283194390190191[37] = 0;
   out_2486283194390190191[38] = 0;
   out_2486283194390190191[39] = 0;
   out_2486283194390190191[40] = 0;
   out_2486283194390190191[41] = 0;
   out_2486283194390190191[42] = 0;
   out_2486283194390190191[43] = 0;
   out_2486283194390190191[44] = 0;
   out_2486283194390190191[45] = 0;
   out_2486283194390190191[46] = 0;
   out_2486283194390190191[47] = 0;
   out_2486283194390190191[48] = 0;
   out_2486283194390190191[49] = 0;
   out_2486283194390190191[50] = 0;
   out_2486283194390190191[51] = 0;
   out_2486283194390190191[52] = 0;
   out_2486283194390190191[53] = 0;
   out_2486283194390190191[54] = 0;
   out_2486283194390190191[55] = 0;
   out_2486283194390190191[56] = 1;
   out_2486283194390190191[57] = 0;
   out_2486283194390190191[58] = 0;
   out_2486283194390190191[59] = 1;
   out_2486283194390190191[60] = 0;
   out_2486283194390190191[61] = 0;
   out_2486283194390190191[62] = 0;
   out_2486283194390190191[63] = 0;
   out_2486283194390190191[64] = 0;
   out_2486283194390190191[65] = 0;
}
void h_9(double *state, double *unused, double *out_1526521770634024069) {
   out_1526521770634024069[0] = state[10];
   out_1526521770634024069[1] = state[11];
   out_1526521770634024069[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4800935740874257279) {
   out_4800935740874257279[0] = 0;
   out_4800935740874257279[1] = 0;
   out_4800935740874257279[2] = 0;
   out_4800935740874257279[3] = 0;
   out_4800935740874257279[4] = 0;
   out_4800935740874257279[5] = 0;
   out_4800935740874257279[6] = 0;
   out_4800935740874257279[7] = 0;
   out_4800935740874257279[8] = 0;
   out_4800935740874257279[9] = 0;
   out_4800935740874257279[10] = 1;
   out_4800935740874257279[11] = 0;
   out_4800935740874257279[12] = 0;
   out_4800935740874257279[13] = 0;
   out_4800935740874257279[14] = 0;
   out_4800935740874257279[15] = 0;
   out_4800935740874257279[16] = 0;
   out_4800935740874257279[17] = 0;
   out_4800935740874257279[18] = 0;
   out_4800935740874257279[19] = 0;
   out_4800935740874257279[20] = 0;
   out_4800935740874257279[21] = 0;
   out_4800935740874257279[22] = 0;
   out_4800935740874257279[23] = 0;
   out_4800935740874257279[24] = 0;
   out_4800935740874257279[25] = 0;
   out_4800935740874257279[26] = 0;
   out_4800935740874257279[27] = 0;
   out_4800935740874257279[28] = 0;
   out_4800935740874257279[29] = 0;
   out_4800935740874257279[30] = 0;
   out_4800935740874257279[31] = 0;
   out_4800935740874257279[32] = 0;
   out_4800935740874257279[33] = 1;
   out_4800935740874257279[34] = 0;
   out_4800935740874257279[35] = 0;
   out_4800935740874257279[36] = 0;
   out_4800935740874257279[37] = 0;
   out_4800935740874257279[38] = 0;
   out_4800935740874257279[39] = 0;
   out_4800935740874257279[40] = 0;
   out_4800935740874257279[41] = 0;
   out_4800935740874257279[42] = 0;
   out_4800935740874257279[43] = 0;
   out_4800935740874257279[44] = 0;
   out_4800935740874257279[45] = 0;
   out_4800935740874257279[46] = 0;
   out_4800935740874257279[47] = 0;
   out_4800935740874257279[48] = 0;
   out_4800935740874257279[49] = 0;
   out_4800935740874257279[50] = 0;
   out_4800935740874257279[51] = 0;
   out_4800935740874257279[52] = 0;
   out_4800935740874257279[53] = 0;
   out_4800935740874257279[54] = 0;
   out_4800935740874257279[55] = 0;
   out_4800935740874257279[56] = 1;
   out_4800935740874257279[57] = 0;
   out_4800935740874257279[58] = 0;
   out_4800935740874257279[59] = 0;
   out_4800935740874257279[60] = 0;
   out_4800935740874257279[61] = 0;
   out_4800935740874257279[62] = 0;
   out_4800935740874257279[63] = 0;
   out_4800935740874257279[64] = 0;
   out_4800935740874257279[65] = 0;
}
void h_10(double *state, double *unused, double *out_1240963690229572142) {
   out_1240963690229572142[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1240963690229572142[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1240963690229572142[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8362305503185082671) {
   out_8362305503185082671[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8362305503185082671[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8362305503185082671[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8362305503185082671[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8362305503185082671[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8362305503185082671[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8362305503185082671[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8362305503185082671[7] = 0;
   out_8362305503185082671[8] = 0;
   out_8362305503185082671[9] = 0;
   out_8362305503185082671[10] = 0;
   out_8362305503185082671[11] = 0;
   out_8362305503185082671[12] = 0;
   out_8362305503185082671[13] = 0;
   out_8362305503185082671[14] = 0;
   out_8362305503185082671[15] = 0;
   out_8362305503185082671[16] = 1;
   out_8362305503185082671[17] = 0;
   out_8362305503185082671[18] = 0;
   out_8362305503185082671[19] = 1;
   out_8362305503185082671[20] = 0;
   out_8362305503185082671[21] = 0;
   out_8362305503185082671[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8362305503185082671[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8362305503185082671[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8362305503185082671[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8362305503185082671[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8362305503185082671[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8362305503185082671[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8362305503185082671[29] = 0;
   out_8362305503185082671[30] = 0;
   out_8362305503185082671[31] = 0;
   out_8362305503185082671[32] = 0;
   out_8362305503185082671[33] = 0;
   out_8362305503185082671[34] = 0;
   out_8362305503185082671[35] = 0;
   out_8362305503185082671[36] = 0;
   out_8362305503185082671[37] = 0;
   out_8362305503185082671[38] = 0;
   out_8362305503185082671[39] = 1;
   out_8362305503185082671[40] = 0;
   out_8362305503185082671[41] = 0;
   out_8362305503185082671[42] = 1;
   out_8362305503185082671[43] = 0;
   out_8362305503185082671[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8362305503185082671[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8362305503185082671[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8362305503185082671[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8362305503185082671[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8362305503185082671[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8362305503185082671[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8362305503185082671[51] = 0;
   out_8362305503185082671[52] = 0;
   out_8362305503185082671[53] = 0;
   out_8362305503185082671[54] = 0;
   out_8362305503185082671[55] = 0;
   out_8362305503185082671[56] = 0;
   out_8362305503185082671[57] = 0;
   out_8362305503185082671[58] = 0;
   out_8362305503185082671[59] = 0;
   out_8362305503185082671[60] = 0;
   out_8362305503185082671[61] = 0;
   out_8362305503185082671[62] = 1;
   out_8362305503185082671[63] = 0;
   out_8362305503185082671[64] = 0;
   out_8362305503185082671[65] = 1;
}
void h_12(double *state, double *unused, double *out_5526052934432677459) {
   out_5526052934432677459[0] = state[0];
   out_5526052934432677459[1] = state[1];
   out_5526052934432677459[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8867541571432923187) {
   out_8867541571432923187[0] = 1;
   out_8867541571432923187[1] = 0;
   out_8867541571432923187[2] = 0;
   out_8867541571432923187[3] = 0;
   out_8867541571432923187[4] = 0;
   out_8867541571432923187[5] = 0;
   out_8867541571432923187[6] = 0;
   out_8867541571432923187[7] = 0;
   out_8867541571432923187[8] = 0;
   out_8867541571432923187[9] = 0;
   out_8867541571432923187[10] = 0;
   out_8867541571432923187[11] = 0;
   out_8867541571432923187[12] = 0;
   out_8867541571432923187[13] = 0;
   out_8867541571432923187[14] = 0;
   out_8867541571432923187[15] = 0;
   out_8867541571432923187[16] = 0;
   out_8867541571432923187[17] = 0;
   out_8867541571432923187[18] = 0;
   out_8867541571432923187[19] = 0;
   out_8867541571432923187[20] = 0;
   out_8867541571432923187[21] = 0;
   out_8867541571432923187[22] = 0;
   out_8867541571432923187[23] = 1;
   out_8867541571432923187[24] = 0;
   out_8867541571432923187[25] = 0;
   out_8867541571432923187[26] = 0;
   out_8867541571432923187[27] = 0;
   out_8867541571432923187[28] = 0;
   out_8867541571432923187[29] = 0;
   out_8867541571432923187[30] = 0;
   out_8867541571432923187[31] = 0;
   out_8867541571432923187[32] = 0;
   out_8867541571432923187[33] = 0;
   out_8867541571432923187[34] = 0;
   out_8867541571432923187[35] = 0;
   out_8867541571432923187[36] = 0;
   out_8867541571432923187[37] = 0;
   out_8867541571432923187[38] = 0;
   out_8867541571432923187[39] = 0;
   out_8867541571432923187[40] = 0;
   out_8867541571432923187[41] = 0;
   out_8867541571432923187[42] = 0;
   out_8867541571432923187[43] = 0;
   out_8867541571432923187[44] = 0;
   out_8867541571432923187[45] = 0;
   out_8867541571432923187[46] = 1;
   out_8867541571432923187[47] = 0;
   out_8867541571432923187[48] = 0;
   out_8867541571432923187[49] = 0;
   out_8867541571432923187[50] = 0;
   out_8867541571432923187[51] = 0;
   out_8867541571432923187[52] = 0;
   out_8867541571432923187[53] = 0;
   out_8867541571432923187[54] = 0;
   out_8867541571432923187[55] = 0;
   out_8867541571432923187[56] = 0;
   out_8867541571432923187[57] = 0;
   out_8867541571432923187[58] = 0;
   out_8867541571432923187[59] = 0;
   out_8867541571432923187[60] = 0;
   out_8867541571432923187[61] = 0;
   out_8867541571432923187[62] = 0;
   out_8867541571432923187[63] = 0;
   out_8867541571432923187[64] = 0;
   out_8867541571432923187[65] = 0;
}
void h_31(double *state, double *unused, double *out_8226496415171608299) {
   out_8226496415171608299[0] = state[7];
   out_8226496415171608299[1] = state[8];
   out_8226496415171608299[2] = state[9];
}
void H_31(double *state, double *unused, double *out_880378862982417185) {
   out_880378862982417185[0] = 0;
   out_880378862982417185[1] = 0;
   out_880378862982417185[2] = 0;
   out_880378862982417185[3] = 0;
   out_880378862982417185[4] = 0;
   out_880378862982417185[5] = 0;
   out_880378862982417185[6] = 0;
   out_880378862982417185[7] = 1;
   out_880378862982417185[8] = 0;
   out_880378862982417185[9] = 0;
   out_880378862982417185[10] = 0;
   out_880378862982417185[11] = 0;
   out_880378862982417185[12] = 0;
   out_880378862982417185[13] = 0;
   out_880378862982417185[14] = 0;
   out_880378862982417185[15] = 0;
   out_880378862982417185[16] = 0;
   out_880378862982417185[17] = 0;
   out_880378862982417185[18] = 0;
   out_880378862982417185[19] = 0;
   out_880378862982417185[20] = 0;
   out_880378862982417185[21] = 0;
   out_880378862982417185[22] = 0;
   out_880378862982417185[23] = 0;
   out_880378862982417185[24] = 0;
   out_880378862982417185[25] = 0;
   out_880378862982417185[26] = 0;
   out_880378862982417185[27] = 0;
   out_880378862982417185[28] = 0;
   out_880378862982417185[29] = 0;
   out_880378862982417185[30] = 1;
   out_880378862982417185[31] = 0;
   out_880378862982417185[32] = 0;
   out_880378862982417185[33] = 0;
   out_880378862982417185[34] = 0;
   out_880378862982417185[35] = 0;
   out_880378862982417185[36] = 0;
   out_880378862982417185[37] = 0;
   out_880378862982417185[38] = 0;
   out_880378862982417185[39] = 0;
   out_880378862982417185[40] = 0;
   out_880378862982417185[41] = 0;
   out_880378862982417185[42] = 0;
   out_880378862982417185[43] = 0;
   out_880378862982417185[44] = 0;
   out_880378862982417185[45] = 0;
   out_880378862982417185[46] = 0;
   out_880378862982417185[47] = 0;
   out_880378862982417185[48] = 0;
   out_880378862982417185[49] = 0;
   out_880378862982417185[50] = 0;
   out_880378862982417185[51] = 0;
   out_880378862982417185[52] = 0;
   out_880378862982417185[53] = 1;
   out_880378862982417185[54] = 0;
   out_880378862982417185[55] = 0;
   out_880378862982417185[56] = 0;
   out_880378862982417185[57] = 0;
   out_880378862982417185[58] = 0;
   out_880378862982417185[59] = 0;
   out_880378862982417185[60] = 0;
   out_880378862982417185[61] = 0;
   out_880378862982417185[62] = 0;
   out_880378862982417185[63] = 0;
   out_880378862982417185[64] = 0;
   out_880378862982417185[65] = 0;
}
void h_32(double *state, double *unused, double *out_2713534762175175397) {
   out_2713534762175175397[0] = state[3];
   out_2713534762175175397[1] = state[4];
   out_2713534762175175397[2] = state[5];
   out_2713534762175175397[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4966114551079340285) {
   out_4966114551079340285[0] = 0;
   out_4966114551079340285[1] = 0;
   out_4966114551079340285[2] = 0;
   out_4966114551079340285[3] = 1;
   out_4966114551079340285[4] = 0;
   out_4966114551079340285[5] = 0;
   out_4966114551079340285[6] = 0;
   out_4966114551079340285[7] = 0;
   out_4966114551079340285[8] = 0;
   out_4966114551079340285[9] = 0;
   out_4966114551079340285[10] = 0;
   out_4966114551079340285[11] = 0;
   out_4966114551079340285[12] = 0;
   out_4966114551079340285[13] = 0;
   out_4966114551079340285[14] = 0;
   out_4966114551079340285[15] = 0;
   out_4966114551079340285[16] = 0;
   out_4966114551079340285[17] = 0;
   out_4966114551079340285[18] = 0;
   out_4966114551079340285[19] = 0;
   out_4966114551079340285[20] = 0;
   out_4966114551079340285[21] = 0;
   out_4966114551079340285[22] = 0;
   out_4966114551079340285[23] = 0;
   out_4966114551079340285[24] = 0;
   out_4966114551079340285[25] = 0;
   out_4966114551079340285[26] = 1;
   out_4966114551079340285[27] = 0;
   out_4966114551079340285[28] = 0;
   out_4966114551079340285[29] = 0;
   out_4966114551079340285[30] = 0;
   out_4966114551079340285[31] = 0;
   out_4966114551079340285[32] = 0;
   out_4966114551079340285[33] = 0;
   out_4966114551079340285[34] = 0;
   out_4966114551079340285[35] = 0;
   out_4966114551079340285[36] = 0;
   out_4966114551079340285[37] = 0;
   out_4966114551079340285[38] = 0;
   out_4966114551079340285[39] = 0;
   out_4966114551079340285[40] = 0;
   out_4966114551079340285[41] = 0;
   out_4966114551079340285[42] = 0;
   out_4966114551079340285[43] = 0;
   out_4966114551079340285[44] = 0;
   out_4966114551079340285[45] = 0;
   out_4966114551079340285[46] = 0;
   out_4966114551079340285[47] = 0;
   out_4966114551079340285[48] = 0;
   out_4966114551079340285[49] = 1;
   out_4966114551079340285[50] = 0;
   out_4966114551079340285[51] = 0;
   out_4966114551079340285[52] = 0;
   out_4966114551079340285[53] = 0;
   out_4966114551079340285[54] = 0;
   out_4966114551079340285[55] = 0;
   out_4966114551079340285[56] = 0;
   out_4966114551079340285[57] = 0;
   out_4966114551079340285[58] = 0;
   out_4966114551079340285[59] = 0;
   out_4966114551079340285[60] = 0;
   out_4966114551079340285[61] = 0;
   out_4966114551079340285[62] = 0;
   out_4966114551079340285[63] = 0;
   out_4966114551079340285[64] = 0;
   out_4966114551079340285[65] = 0;
   out_4966114551079340285[66] = 0;
   out_4966114551079340285[67] = 0;
   out_4966114551079340285[68] = 0;
   out_4966114551079340285[69] = 0;
   out_4966114551079340285[70] = 0;
   out_4966114551079340285[71] = 0;
   out_4966114551079340285[72] = 1;
   out_4966114551079340285[73] = 0;
   out_4966114551079340285[74] = 0;
   out_4966114551079340285[75] = 0;
   out_4966114551079340285[76] = 0;
   out_4966114551079340285[77] = 0;
   out_4966114551079340285[78] = 0;
   out_4966114551079340285[79] = 0;
   out_4966114551079340285[80] = 0;
   out_4966114551079340285[81] = 0;
   out_4966114551079340285[82] = 0;
   out_4966114551079340285[83] = 0;
   out_4966114551079340285[84] = 0;
   out_4966114551079340285[85] = 0;
   out_4966114551079340285[86] = 0;
   out_4966114551079340285[87] = 0;
}
void h_13(double *state, double *unused, double *out_6011079237240868127) {
   out_6011079237240868127[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6011079237240868127[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6011079237240868127[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8607241580012214345) {
   out_8607241580012214345[0] = 0;
   out_8607241580012214345[1] = 0;
   out_8607241580012214345[2] = 0;
   out_8607241580012214345[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8607241580012214345[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8607241580012214345[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8607241580012214345[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8607241580012214345[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8607241580012214345[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8607241580012214345[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8607241580012214345[10] = 0;
   out_8607241580012214345[11] = 0;
   out_8607241580012214345[12] = 0;
   out_8607241580012214345[13] = 0;
   out_8607241580012214345[14] = 0;
   out_8607241580012214345[15] = 0;
   out_8607241580012214345[16] = 0;
   out_8607241580012214345[17] = 0;
   out_8607241580012214345[18] = 0;
   out_8607241580012214345[19] = 0;
   out_8607241580012214345[20] = 0;
   out_8607241580012214345[21] = 0;
   out_8607241580012214345[22] = 0;
   out_8607241580012214345[23] = 0;
   out_8607241580012214345[24] = 0;
   out_8607241580012214345[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8607241580012214345[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8607241580012214345[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8607241580012214345[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8607241580012214345[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8607241580012214345[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8607241580012214345[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8607241580012214345[32] = 0;
   out_8607241580012214345[33] = 0;
   out_8607241580012214345[34] = 0;
   out_8607241580012214345[35] = 0;
   out_8607241580012214345[36] = 0;
   out_8607241580012214345[37] = 0;
   out_8607241580012214345[38] = 0;
   out_8607241580012214345[39] = 0;
   out_8607241580012214345[40] = 0;
   out_8607241580012214345[41] = 0;
   out_8607241580012214345[42] = 0;
   out_8607241580012214345[43] = 0;
   out_8607241580012214345[44] = 0;
   out_8607241580012214345[45] = 0;
   out_8607241580012214345[46] = 0;
   out_8607241580012214345[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8607241580012214345[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8607241580012214345[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8607241580012214345[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8607241580012214345[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8607241580012214345[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8607241580012214345[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8607241580012214345[54] = 0;
   out_8607241580012214345[55] = 0;
   out_8607241580012214345[56] = 0;
   out_8607241580012214345[57] = 0;
   out_8607241580012214345[58] = 0;
   out_8607241580012214345[59] = 0;
   out_8607241580012214345[60] = 0;
   out_8607241580012214345[61] = 0;
   out_8607241580012214345[62] = 0;
   out_8607241580012214345[63] = 0;
   out_8607241580012214345[64] = 0;
   out_8607241580012214345[65] = 0;
}
void h_14(double *state, double *unused, double *out_1526521770634024069) {
   out_1526521770634024069[0] = state[10];
   out_1526521770634024069[1] = state[11];
   out_1526521770634024069[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4800935740874257279) {
   out_4800935740874257279[0] = 0;
   out_4800935740874257279[1] = 0;
   out_4800935740874257279[2] = 0;
   out_4800935740874257279[3] = 0;
   out_4800935740874257279[4] = 0;
   out_4800935740874257279[5] = 0;
   out_4800935740874257279[6] = 0;
   out_4800935740874257279[7] = 0;
   out_4800935740874257279[8] = 0;
   out_4800935740874257279[9] = 0;
   out_4800935740874257279[10] = 1;
   out_4800935740874257279[11] = 0;
   out_4800935740874257279[12] = 0;
   out_4800935740874257279[13] = 0;
   out_4800935740874257279[14] = 0;
   out_4800935740874257279[15] = 0;
   out_4800935740874257279[16] = 0;
   out_4800935740874257279[17] = 0;
   out_4800935740874257279[18] = 0;
   out_4800935740874257279[19] = 0;
   out_4800935740874257279[20] = 0;
   out_4800935740874257279[21] = 0;
   out_4800935740874257279[22] = 0;
   out_4800935740874257279[23] = 0;
   out_4800935740874257279[24] = 0;
   out_4800935740874257279[25] = 0;
   out_4800935740874257279[26] = 0;
   out_4800935740874257279[27] = 0;
   out_4800935740874257279[28] = 0;
   out_4800935740874257279[29] = 0;
   out_4800935740874257279[30] = 0;
   out_4800935740874257279[31] = 0;
   out_4800935740874257279[32] = 0;
   out_4800935740874257279[33] = 1;
   out_4800935740874257279[34] = 0;
   out_4800935740874257279[35] = 0;
   out_4800935740874257279[36] = 0;
   out_4800935740874257279[37] = 0;
   out_4800935740874257279[38] = 0;
   out_4800935740874257279[39] = 0;
   out_4800935740874257279[40] = 0;
   out_4800935740874257279[41] = 0;
   out_4800935740874257279[42] = 0;
   out_4800935740874257279[43] = 0;
   out_4800935740874257279[44] = 0;
   out_4800935740874257279[45] = 0;
   out_4800935740874257279[46] = 0;
   out_4800935740874257279[47] = 0;
   out_4800935740874257279[48] = 0;
   out_4800935740874257279[49] = 0;
   out_4800935740874257279[50] = 0;
   out_4800935740874257279[51] = 0;
   out_4800935740874257279[52] = 0;
   out_4800935740874257279[53] = 0;
   out_4800935740874257279[54] = 0;
   out_4800935740874257279[55] = 0;
   out_4800935740874257279[56] = 1;
   out_4800935740874257279[57] = 0;
   out_4800935740874257279[58] = 0;
   out_4800935740874257279[59] = 0;
   out_4800935740874257279[60] = 0;
   out_4800935740874257279[61] = 0;
   out_4800935740874257279[62] = 0;
   out_4800935740874257279[63] = 0;
   out_4800935740874257279[64] = 0;
   out_4800935740874257279[65] = 0;
}
void h_33(double *state, double *unused, double *out_140589368303733818) {
   out_140589368303733818[0] = state[16];
   out_140589368303733818[1] = state[17];
   out_140589368303733818[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7369778917453420002) {
   out_7369778917453420002[0] = 0;
   out_7369778917453420002[1] = 0;
   out_7369778917453420002[2] = 0;
   out_7369778917453420002[3] = 0;
   out_7369778917453420002[4] = 0;
   out_7369778917453420002[5] = 0;
   out_7369778917453420002[6] = 0;
   out_7369778917453420002[7] = 0;
   out_7369778917453420002[8] = 0;
   out_7369778917453420002[9] = 0;
   out_7369778917453420002[10] = 0;
   out_7369778917453420002[11] = 0;
   out_7369778917453420002[12] = 0;
   out_7369778917453420002[13] = 0;
   out_7369778917453420002[14] = 0;
   out_7369778917453420002[15] = 0;
   out_7369778917453420002[16] = 1;
   out_7369778917453420002[17] = 0;
   out_7369778917453420002[18] = 0;
   out_7369778917453420002[19] = 0;
   out_7369778917453420002[20] = 0;
   out_7369778917453420002[21] = 0;
   out_7369778917453420002[22] = 0;
   out_7369778917453420002[23] = 0;
   out_7369778917453420002[24] = 0;
   out_7369778917453420002[25] = 0;
   out_7369778917453420002[26] = 0;
   out_7369778917453420002[27] = 0;
   out_7369778917453420002[28] = 0;
   out_7369778917453420002[29] = 0;
   out_7369778917453420002[30] = 0;
   out_7369778917453420002[31] = 0;
   out_7369778917453420002[32] = 0;
   out_7369778917453420002[33] = 0;
   out_7369778917453420002[34] = 0;
   out_7369778917453420002[35] = 0;
   out_7369778917453420002[36] = 0;
   out_7369778917453420002[37] = 0;
   out_7369778917453420002[38] = 0;
   out_7369778917453420002[39] = 1;
   out_7369778917453420002[40] = 0;
   out_7369778917453420002[41] = 0;
   out_7369778917453420002[42] = 0;
   out_7369778917453420002[43] = 0;
   out_7369778917453420002[44] = 0;
   out_7369778917453420002[45] = 0;
   out_7369778917453420002[46] = 0;
   out_7369778917453420002[47] = 0;
   out_7369778917453420002[48] = 0;
   out_7369778917453420002[49] = 0;
   out_7369778917453420002[50] = 0;
   out_7369778917453420002[51] = 0;
   out_7369778917453420002[52] = 0;
   out_7369778917453420002[53] = 0;
   out_7369778917453420002[54] = 0;
   out_7369778917453420002[55] = 0;
   out_7369778917453420002[56] = 0;
   out_7369778917453420002[57] = 0;
   out_7369778917453420002[58] = 0;
   out_7369778917453420002[59] = 0;
   out_7369778917453420002[60] = 0;
   out_7369778917453420002[61] = 0;
   out_7369778917453420002[62] = 1;
   out_7369778917453420002[63] = 0;
   out_7369778917453420002[64] = 0;
   out_7369778917453420002[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1072191033157158601) {
  H(in_vec, out_1072191033157158601);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9153287392632638135) {
  err_fun(nom_x, delta_x, out_9153287392632638135);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8767774856622703482) {
  inv_err_fun(nom_x, true_x, out_8767774856622703482);
}
void live_H_mod_fun(double *state, double *out_1721134699022982220) {
  H_mod_fun(state, out_1721134699022982220);
}
void live_f_fun(double *state, double dt, double *out_2791114234699295272) {
  f_fun(state,  dt, out_2791114234699295272);
}
void live_F_fun(double *state, double dt, double *out_3238609712970279026) {
  F_fun(state,  dt, out_3238609712970279026);
}
void live_h_4(double *state, double *unused, double *out_448328737891450255) {
  h_4(state, unused, out_448328737891450255);
}
void live_H_4(double *state, double *unused, double *out_2486283194390190191) {
  H_4(state, unused, out_2486283194390190191);
}
void live_h_9(double *state, double *unused, double *out_1526521770634024069) {
  h_9(state, unused, out_1526521770634024069);
}
void live_H_9(double *state, double *unused, double *out_4800935740874257279) {
  H_9(state, unused, out_4800935740874257279);
}
void live_h_10(double *state, double *unused, double *out_1240963690229572142) {
  h_10(state, unused, out_1240963690229572142);
}
void live_H_10(double *state, double *unused, double *out_8362305503185082671) {
  H_10(state, unused, out_8362305503185082671);
}
void live_h_12(double *state, double *unused, double *out_5526052934432677459) {
  h_12(state, unused, out_5526052934432677459);
}
void live_H_12(double *state, double *unused, double *out_8867541571432923187) {
  H_12(state, unused, out_8867541571432923187);
}
void live_h_31(double *state, double *unused, double *out_8226496415171608299) {
  h_31(state, unused, out_8226496415171608299);
}
void live_H_31(double *state, double *unused, double *out_880378862982417185) {
  H_31(state, unused, out_880378862982417185);
}
void live_h_32(double *state, double *unused, double *out_2713534762175175397) {
  h_32(state, unused, out_2713534762175175397);
}
void live_H_32(double *state, double *unused, double *out_4966114551079340285) {
  H_32(state, unused, out_4966114551079340285);
}
void live_h_13(double *state, double *unused, double *out_6011079237240868127) {
  h_13(state, unused, out_6011079237240868127);
}
void live_H_13(double *state, double *unused, double *out_8607241580012214345) {
  H_13(state, unused, out_8607241580012214345);
}
void live_h_14(double *state, double *unused, double *out_1526521770634024069) {
  h_14(state, unused, out_1526521770634024069);
}
void live_H_14(double *state, double *unused, double *out_4800935740874257279) {
  H_14(state, unused, out_4800935740874257279);
}
void live_h_33(double *state, double *unused, double *out_140589368303733818) {
  h_33(state, unused, out_140589368303733818);
}
void live_H_33(double *state, double *unused, double *out_7369778917453420002) {
  H_33(state, unused, out_7369778917453420002);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
